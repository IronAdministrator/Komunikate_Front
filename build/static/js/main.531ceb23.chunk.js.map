{"version":3,"sources":["components/AdminPanel/httpClient.js","images/logos/Komunikate_Long_Blue_sub_v03.svg","components/NavBar/NavBar.js","components/Articles/Articles.js","images/banner/01_BerlinTurm.jpg","images/banner/02_Guitar.jpg","images/banner/03_BeerOutside.jpg","images/banner/04_RJD6863.jpg","images/banner/06_RJD9955.jpg","images/banner/05_ThreeWoman.jpg","images/banner/07_relocating-to-germany.jpg","images/banner/08_Berlin_Bridge.jpg","images/banner/10_BerlinSky.jpg","components/LandingBanner/LandingBanner.js","components/HeaderSection/HeaderBody.js","components/FooterNew/FooterNew.js","components/Card/UserCard.js","components/LoggedInLandingPage/UserLoggedin.js","images/logos/Komunikate_Long_Black_v01.svg","components/LoginPage/UserLogin.js","components/LoginPage/UserSignup.js","components/UserProfilePage/UserProfile.js","components/UserSettings/UserSettings.js","components/Messenger/contexts/SocketProvider.js","components/Messenger/contexts/ContactsProvider.js","components/Messenger/contexts/ConversationsProvider.js","components/Messenger/components/Conversations.js","components/Messenger/components/SearchModal.js","components/Messenger/components/Contacts.js","components/Messenger/components/Sidebar.js","components/Messenger/components/OpenConversations.js","components/Messenger/components/Dashboard.js","components/Messenger/Messenger.js","components/ArticlePage/ArticleTemp.js","components/AdminPanel/Provid.js","components/AdminPanel/UserList.js","components/AdminPanel/UserCreate.js","components/AdminPanel/UserEdit.js","components/AdminPanel/ArticleList.js","components/AdminPanel/ArticleCreate.js","components/AdminPanel/ArticleEdit.js","components/AdminPanel/Logo.png","components/AdminPanel/MyAppBar.js","components/AdminPanel/MyLayout.js","components/AdminPanel/AdminPanel.js","App.js","reportWebVitals.js","index.js"],"names":["fetchJson","Error","url","options","requestHeaders","headers","Headers","Accept","has","body","FormData","token","localStorage","getItem","console","log","axios","then","response","status","statusText","data","Promise","reject","resolve","error","stringify","queryString","process","PORT","require","NavBar","userToken","setJwt","useState","email","setEmail","pw","setPw","history","useHistory","loginFunction","user","Axios","post","setItem","catch","err","searchRef","useRef","Navbar","bg","expand","sticky","className","Brand","to","src","logo","width","alt","href","Toggle","Collapse","id","Form","onSubmit","e","preventDefault","push","current","value","inline","FormControl","type","placeholder","ref","Button","variant","Nav","Link","NavDropdown","title","username","Item","Divider","onClick","clear","userImg","height","class","Group","controlId","Label","Control","onChange","target","Text","password","res","alert","exact","Container","fluid","defaultActiveKey","eventKey","Articles","topic","useParams","articles","setArticles","categories","fetchCategories","a","get","getCategoryArticle","fetchArticles","allarticles","fetchSearch","params","searchtext","searchedArticles","useEffect","includes","CardColumns","map","article","_id","Card","Img","img1","Body","Title","substring","time","date","Date","toLocaleDateString","hour","minute","LandingBanner","role","Carousel","fade","controls","indicators","interval","Carousel01","Caption","Carousel02","Carousel03","Carousel09","Carousel04","Carousel06","Carousel07","Carousel08","MainBody","props","year","getFullYear","Footer","UserProfile","setUser","users","setUsers","fetchUsers","getUser","Row","Col","md","first_name","last_name","Badge","user_role","living_in_germany","block","name","icon","faComments","userBio","Table","size","nationality","languages","interests","UserLoggedIn","randomUsers","setRandomUsers","languagesRef","citiesRef","roleRef","languagesArray","ISO6391","getAllNames","fetchRandomUsers","newQueryString","city_in_germany","as","el","UserLogin","document","getElementById","reset","autocomplete","required","Check","label","UserSignup","setToken","setLogin","setRegister","setUserName","firstname","setFirstName","lastname","setLastName","setNationality","setLanguages","cityGermany","setCityGermany","userRole","setUserRole","registerFunction","newUser","autoComplete","language","index","newLanguages","handleInputChange","handleAddLanguage","UserSettings","userInfo","setUserInfo","userName","firstName","lastName","livingGermany","setLivingGermany","workingRole","setWorkingRole","bio","setBio","proPhoto","setProPhoto","hobbies","setHobbies","fetchUserInfo","working_role","updateUserInfo","put","popover","Popover","Content","UpdatePassword","OverlayTrigger","trigger","placement","overlay","sm","ListGroup","action","checked","rows","lg","newUserInfo","SocketContext","createContext","useSocket","useContext","SocketProvider","idUser","children","socket","setSocket","newSocket","io","query","on","info","disconnect","Provider","ContactsContext","useContacts","ContactsProvider","contacts","setContacts","mapContacts","setMapContacts","connectedUsers","setConnectedUsers","searchedUsersGet","isChecked","allContacts","off","ConversationsContext","useConversations","ConversationsProvider","conversations","setConversations","selectedConversationIndex","setSelectedConversationIndex","arrayEquality","b","length","sort","every","element","Array","isArray","newConversations","recipients","participants","filter","p","messages","convIndex","findIndex","conversation","prevConv","addMessageToConversation","useCallback","text","sender","prevConversations","madeChange","newMessage","formattedConversations","recipient","contact","find","message","fromMe","senderName","selected","selectedConversation","sendMessage","emit","selectConversationIndex","createConversation","Conversations","active","join","SearchModal","closeModal","usernameRef","Modal","Header","closeButton","Contacts","setActiveKey","conversationsKey","modalOpen","setModalOpen","selectedContactIds","setSelectedContactIds","conversationsPlusRecipients","checkDuplicate","handleCheckboxChange","checkedArray","contactIndex","style","position","top","zIndex","backgroundColor","form","flat","selectIndex","recipientsArray","checkboxFalse","pill","faComment","faCommentSlash","listStyleType","show","onHide","CONVERSATIONS_KEY","CONTACTS_KEY","Sidebar","activeKey","Tab","onSelect","Pane","borderWidth","OpenConversations","textRef","setText","setRef","node","scrollIntoView","smooth","handleSubmit","lastMessage","InputGroup","resize","Append","faPaperPlane","Dashboard","Messenger","ArticleTemp","apiUrl","httpClient","setPost","showScroll","setShowScroll","window","addEventListener","pageYOffset","fetchArticle","getarticle","subtitle","img2","body2","img3","body3","scrollTo","behavior","display","UserList","List","Datagrid","TextField","source","SelectField","choices","BooleanField","EditButton","basePath","DeleteButton","UserCreate","Create","SimpleForm","TextInput","PasswordInput","RadioButtonGroupInput","BooleanInput","UserEdit","Edit","ArticleList","rowClick","DateField","ArticleCreate","multiline","DateInput","SelectArrayInput","ImageInput","accept","ArticleEdit","disabled","useStyles","makeStyles","flex","textOverflow","whiteSpace","overflow","spacer","MyAppBar","classes","AppBar","Typography","color","Logo","MyLayout","Layout","appBar","dataProvider","resource","UPDATE_MANY","all","ids","method","JSON","responses","json","DELETE_MANY","GET_LIST","pagination","page","perPage","field","order","GET_ONE","GET_MANY","GET_MANY_REFERENCE","skip","limit","UPDATE","CREATE","DELETE","convertDataRequestToHTTP","item","total","parseInt","editArticle","editUser","convertHTTPResponse","theme","createMuiTheme","palette","AdminPanel","Admin","layout","Resource","list","create","edit","PostList","PostCreate","PostEdit","App","setUserToken","jwt","location","useLocation","decoded","jwt_decode","admin","pathname","toLowerCase","path","component","UserCard","SingleArticle","FooterNew","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.531ceb23.chunk.js","sourcesContent":["import { stringify } from 'query-string';\nimport axios from 'axios'\n\nclass HttpError extends Error {\n    constructor(\n        message,\n        status,\n        body = null\n    ) {\n        super(message);\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = new Error(message).stack;\n        }\n        this.stack = new Error().stack;\n    }\n}\n\nexport const fetchJson = (url, options) => {\n    const requestHeaders = (options.headers ||\n        new Headers({\n            Accept: 'application/json',\n        }));\n    if (\n        !requestHeaders.has('Content-Type') &&\n        !(options && options.body && options.body instanceof FormData)\n    ) {\n        requestHeaders['Content-Type'] = 'application/json';\n    }\n    // auth-token was changed to token on July 3rd 15Uhr \n    // to keep naming consistent with localstorage.getItem\n    // which has it labeled as 'token' in app.js\n    const token = localStorage.getItem('token'); \n    requestHeaders['Authorization'] = `${token}`;\n    \nconsole.log(url, options)\n    return axios(url, { ...options, headers: requestHeaders })\n        .then(response => {\n           let { status, statusText, data } = response;\n            if (status < 200 || status >= 300) {\n                return Promise.reject(\n                    {\n                        data: data || statusText,\n                        status\n                    }\n                );\n            }\n            return Promise.resolve(response);\n        }, error => {\n            if (error.response) {\n                let { status, statusText, data } = error.response;\n                if (status < 200 || status >= 300) {\n                    return Promise.reject(\n                        {\n                            data: data || statusText,\n                            status\n                        }\n                    );\n                }\n            }\n        });\n};\n\nexport const queryParameters = stringify;\n\nconst isValidObject = value => {\n    if (!value) {\n        return false;\n    }\n\n    const isArray = Array.isArray(value);\n    const isBuffer = typeof Buffer !== 'undefined' && Buffer.isBuffer(value);\n    const isObject =\n        Object.prototype.toString.call(value) === '[object Object]';\n    const hasKeys = !!Object.keys(value).length;\n\n    return !isArray && !isBuffer && isObject && hasKeys;\n};\n\nexport const flattenObject = (value, path = []) => {\n    if (isValidObject(value)) {\n        return Object.assign(\n            {},\n            ...Object.keys(value).map(key =>\n                flattenObject(value[key], path.concat([key]))\n            )\n        );\n    } else {\n        return path.length ? { [path.join('.')]: value } : value;\n    }\n};","export default __webpack_public_path__ + \"static/media/Komunikate_Long_Blue_sub_v03.1eb9dd82.svg\";","import React, { useState, useRef } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  Button,\n  FormControl,\n  Container,\n} from \"react-bootstrap\";\nimport \"./NavBar.css\";\nimport \"../fonts.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../images/logos/Komunikate_Long_Blue_sub_v03.svg\";\n// import logo from './components/logos/Komunikate_Long_Black_v01.svg';\n// import logo from './components/logos/Komunikate_Long_Blue_v01.svg';\n// import logo from './components/logos/Komunikate_Long_White_v01.svg';\n// import logo from './components/logos/Komunikate_Small_Black_v01.svg';\n// import logo from './components/logos/Komunikate_Small_Black_v01.svg';\n// import logo from './components/logos/Komunikate_Small_White_v01.svg';\nimport Axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\nconst PORT = process.env.PORT || 'https://stark-fjord-75040.herokuapp.com';\nconst queryString = require(\"query-string\");\n\nconst NavBar = ({ userToken, setJwt }) => {\n \n  // Dropdown Login Functionality Below\n\n  const [email, setEmail] = useState();\n  const [pw, setPw] = useState();\n  let history = useHistory();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const user = queryString.stringify({\n      email: email,\n      password: pw,\n    });\n    loginFunction(user).then((res) => {\n      if (res) {\n        alert(\"You've logged in\");\n        setJwt(res);\n        history.push(\"/\");\n      } else {\n        alert(\"You've entered an incorrect E-mail or Password\");\n      }\n    });\n  };\n\n  const loginFunction = (user) => {\n    return (\n      Axios.post(\"https://stark-fjord-75040.herokuapp.com/login\", user)\n        /* return Axios.post(\"https://stark-fjord-75040.herokuapp.com/login\", user) */\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data);\n          // Commented out setToken below because it\n          // doesn't seem to be needed for userlogin to run\n          /*         setToken(response.data); */\n          return response.data; //redirect react-router to individual landing page\n        })\n        .catch((err) => {\n          console.log(err); //show error message, clear form, say try again\n        })\n    );\n  };\n\n  // Search functionality\n    const searchRef = useRef()\n    const token = localStorage.getItem(\"token\");\n\n\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    history.push(`/articles/${searchRef.current.value}`)\n    searchRef.current.value = ''\n  }\n\n\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\" className=\"dropShadowNav\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              width=\"350\"\n              /* height=\"50\" */\n              className=\"d-inline-block align-top logoShift\"\n              alt=\"Kommunikate\"\n            />\n          </Link>\n        </Navbar.Brand>\n\n        <Navbar.Brand href=\"#home\"></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        {/* Center Search Bar */}\n        <Navbar.Collapse id=\"basic-navbar-nav\">  \n          <Form onSubmit={handleSubmit} id=\"center\" inline>\n            <FormControl\n              type=\"text\"\n              placeholder=\"What are you looking for?\"\n              className=\"mr-sm-2 formFonts formWidth roundedInput\"\n              ref={searchRef}\n            />\n            <Button type=\"submit\" variant=\"outline-primary\" className=\"buttonFonts\">Find it!</Button>\n          </Form>\n        </Navbar.Collapse>\n\n        {/* Conditionally rendered login/registration button : user Profile options */}\n        {token ? (\n          <Nav>\n            <Nav.Link>\n              <Link to=\"/adminpanel\">\n                <img\n                  src=\"https://image.flaticon.com/icons/png/512/3463/3463339.png\"\n                  // change icon to admin panel & add conditional rendering for admin\n                  width=\"30\"\n                  alt=\"Admin Panel\"\n                />\n              </Link>\n            </Nav.Link>\n            <Nav.Link>\n              <Link to=\"/messages\">\n                <img\n                  src=\"https://image.flaticon.com/icons/png/512/2950/2950657.png\"\n                  width=\"30\"\n                  alt=\"Messages\"\n                />\n              </Link>\n            </Nav.Link>\n            <NavDropdown\n              title={`Hello ${userToken.username}` || \"Hello!\"}\n              id=\"basic-nav-dropdown\"\n              className=\"navBarSpacing\"\n            >\n              <NavDropdown.Item>\n                <Link to=\"/user_home\">User Home</Link>\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                <Link to={`/users/${userToken.id}`}>User Profile</Link>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                <Link to=\"/user_settings\">User Settings</Link>\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"/\" onClick={() => localStorage.clear()}>Log Out</NavDropdown.Item>\n            </NavDropdown>\n            <div className=\"profile-cropper\">\n            <Link to={`/users/${userToken.id}`}>\n                <img src={userToken.userImg || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"}\n                  width=\"40px\"\n                  height=\"40px\"\n                  alt=\"{userToken.username}\" />\n              </Link>\n            </div>\n          </Nav>\n          \n        ) : (\n          <Nav className=\"mr-auto\">\n            {/*             <Nav.Link>\n              <Link to=\"/user_login\">Login</Link>\n            </Nav.Link> */}\n                          \n            <NavDropdown title=\"Login\" id=\"basic-nav-dropdown\"  class=\"dropdown-menu-end\">\n              <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <div class=\"col-auto\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    className=\"formFonts\"\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                  </div>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <div class=\"col-auto\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className=\"formFonts\"\n                    onChange={(e) => setPw(e.target.value)}\n                  />\n                                    </div>\n                </Form.Group>\n{/*                 <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                  <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                  <div class=\"col-auto\">\n                    <Button variant=\"primary\" type=\"submit\" className=\"buttonFonts\" onClick={handleLogin}>\n\n                      Log In\n\n                    </Button>\n                  </div>\n              </Form>\n              <NavDropdown.Divider />\n \n            </NavDropdown>\n            <Form inline>\n              <Link exact to=\"/register\">\n                <Button variant=\"outline-success\" className=\"buttonFonts\">\n                  Register\n                </Button>{\" \"}\n              </Link>\n            </Form>\n          </Nav>\n        )}\n      </Navbar>\n\n      {/* SubNavBar starts here */}\n      <Container fluid className=\"fullWidthImage\">\n        <Nav\n          bg=\"light\"\n          expand=\"lg\"\n          id=\"center\"\n          variant=\"light\"\n          defaultActiveKey=\"/\"\n          className=\"color_brandgradient stickyNav\"\n        >\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-1\">\n              <Link to=\"/articles/guide\" className=\"mainHeaderFonts color_white\"> Guides </Link>\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-2\">\n              <Link to=\"/articles/visa\" className=\"mainHeaderFonts color_white\"> Visas </Link>\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-3\">\n              <Link to=\"/articles/healthcare\" className=\"mainHeaderFonts color_white\"> Healthcare </Link>\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-4\">\n              <Link to=\"/articles/lifestyle\" className=\"mainHeaderFonts color_white\"> Lifestyle </Link>\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Container>\n    </>\n  );\n};\n\nexport default NavBar;","import { Card, CardColumns, Button, Container } from \"react-bootstrap\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Articles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../fonts.css\";\n\n\nconst Articles = () => {\n  let { topic } = useParams();\n  console.log(topic)\n  const [articles, setArticles] = useState();\n\n  const categories = ['guide', 'healthcare', 'lifestyle', 'visa']\n\n  const calcDate = (time) => {\n    const event = new Date(time);\n    return event.toLocaleDateString({\n      hour: \"numeric\",\n      minute: \"numeric\",\n    });\n  };\n\n  const fetchCategories = async () => {\n    await axios\n      .get(`https://stark-fjord-75040.herokuapp.com/posts/categories/${topic}`)\n      .then((response) => setArticles(response.data.getCategoryArticle))\n      .catch((error) => console.log(error));\n  };\n\n  const fetchArticles = async () => {\n    await axios\n      .get(\"https://stark-fjord-75040.herokuapp.com/posts\")\n      .then((response) => setArticles(response.data.allarticles))\n      .catch((error) => console.log(error));\n  };\n\n  const fetchSearch = async () => {\n    await axios\n            .get(`https://stark-fjord-75040.herokuapp.com/posts/search`, { params: {searchtext: topic}})\n            .then(res => {\n                console.log(res)\n                setArticles(res.data.searchedArticles)\n            })\n            .catch(err => {\n              console.log(err)\n            })\n  }\n\n  useEffect(() => {\n    if (categories.includes(topic)) fetchCategories()\n    else if (topic) fetchSearch()\n    else fetchArticles()\n  }, [topic]);\n\n  return (\n    <Container className=\"cards-container\">\n            <Container className=\"our-mission-container mainBodyFont justifyText\">\n          <h1 className=\"mainHeaderFonts color_lightblue someTopPadding\">{topic ? topic  : \"The Latest Articles\"}</h1>\n          <hr className=\"color_lightblue_hr\" />\n          <h4>\n\n          </h4>\n        </Container>\n      <CardColumns>\n\n        \n        {articles &&\n          articles.map((article) => (\n            <Link to={`/articles/article/${article._id}`}>\n              <Card>\n                <Card.Img\n                  variant=\"top\"\n                  src={article.img1 || \"https://cdn.pixabay.com/photo/2017/08/16/00/59/panorama-2646143_960_720.jpg\"}\n                />\n                <Card.Body>\n                  <Card.Title className=\"mainHeaderFonts color_darkgrey\">{article.title}</Card.Title>\n                  <hr className=\"color_lightblue_hr\" />\n                  <Card.Text className=\"subHeadlineFonts paragraphRagging color_darkgrey textLeftAlign\">{article.body.substring(0, 120)}...</Card.Text>\n                </Card.Body>\n                <Card.Text>\n                  <small className=\"text-muted quoteFonts creationDatePadding\">\n                    post created: {calcDate(article.date)}\n                  </small>\n                </Card.Text>\n              </Card>\n            </Link>\n          ))}\n      </CardColumns>\n    </Container>\n  );\n};\n\nexport default Articles;\n","export default __webpack_public_path__ + \"static/media/01_BerlinTurm.3ecec37c.jpg\";","export default __webpack_public_path__ + \"static/media/02_Guitar.128a5401.jpg\";","export default __webpack_public_path__ + \"static/media/03_BeerOutside.2579069c.jpg\";","export default __webpack_public_path__ + \"static/media/04_RJD6863.cdd136d3.jpg\";","export default __webpack_public_path__ + \"static/media/06_RJD9955.a72fe309.jpg\";","export default __webpack_public_path__ + \"static/media/05_ThreeWoman.90bcb5d9.jpg\";","export default __webpack_public_path__ + \"static/media/07_relocating-to-germany.d3e35f7a.jpg\";","export default __webpack_public_path__ + \"static/media/08_Berlin_Bridge.f07c4206.jpg\";","export default __webpack_public_path__ + \"static/media/10_BerlinSky.f0b089fb.jpg\";","import React from 'react';\nimport { Carousel } from \"react-bootstrap\";\nimport Carousel01 from \"../../images/banner/01_BerlinTurm.jpg\";\nimport Carousel02 from \"../../images/banner/02_Guitar.jpg\";\nimport Carousel03 from \"../../images/banner/03_BeerOutside.jpg\";\nimport Carousel04 from \"../../images/banner/04_RJD6863.jpg\";\nimport Carousel05 from \"../../images/banner/05_ThreeWoman.jpg\";\nimport Carousel06 from \"../../images/banner/06_RJD9955.jpg\"\nimport Carousel07 from \"../../images/banner/07_relocating-to-germany.jpg\"\nimport Carousel08 from \"../../images/banner/08_Berlin_Bridge.jpg\"\nimport Carousel09 from \"../../images/banner/10_BerlinSky.jpg\";\nimport './LandingBanner.css';\nimport \"../fonts.css\"\n\nconst LandingBanner = () => {\n\n    return (\n        <div>\n            <div class=\"carousel-inner\" role=\"listbox\" className=\"bannerShift boxDropShadow\">\n\n            <Carousel fade controls={false} indicators={false}>\n                <Carousel.Item interval={2000}>\n                    <img\n                        className=\"d-block w-100 imgYShift\"\n                        src={Carousel01}\n                        alt=\"Karl-Marx-Allee\"\n                    />\n                    <Carousel.Caption>\n                    <div class=\"text-wrap\" className=\"color_lightblueBox captionShift dropShadow\">\n\n                    <h3 className=\"mainHeaderFonts text-left\">Berlin</h3>\n                        <p className=\"subHeadlineFonts text-left\">Karl-Marx-Allee</p>\n\n                    </div>\n                        \n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item interval={5000}>\n                    <img\n                        className=\"d-block w-100 imgYShift\"\n                        src={Carousel02}\n                        alt=\"Kantstrasse, Charlottenburg\"\n                    />\n\n                    <Carousel.Caption>\n                        <div class=\"text-wrap\" className=\"color_lightblueBox captionShift dropShadow\">\n                        <h3 className=\"mainHeaderFonts text-left\">Berlin</h3>\n                        <p className=\"subHeadlineFonts text-left\">Kantstrasse, Charlottenburg</p>\n                        </div>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item interval={2000}>\n                    <img\n                        className=\"d-block w-100 imgYShift\"\n                        src={Carousel03}\n                        alt=\"Central Park\"\n                    />\n\n                    <Carousel.Caption>\n                        <div class=\"text-wrap\" className=\"color_lightblueBox captionShift dropShadow\">\n                        <h3 className=\"mainHeaderFonts text-left\">Hamburg</h3>\n                        <p className=\"subHeadlineFonts text-left\">\n                            Central Park\n                        </p>\n                        </div>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item interval={2000}>\n                    <img\n                        className=\"d-block w-100 imgYShift\"\n                        src={Carousel09}\n                        alt=\"The sky over Alexanderplatz\"\n                    />\n\n                    <Carousel.Caption>\n                        <div class=\"text-wrap\" className=\"color_lightblueBox captionShift dropShadow\">\n                        <h3 className=\"mainHeaderFonts text-left\">Berlin</h3>\n                        <p className=\"subHeadlineFonts text-left\">\n                            The sky over Alexanderplatz\n                        </p>\n                        </div>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item interval={2000}>\n                    <img\n                        className=\"d-block w-100 imgYShift\"\n                        src={Carousel04}\n                        alt=\"Platz der Republik in Altona\"\n                    />\n\n                    <Carousel.Caption>\n                        <div class=\"text-wrap\" className=\"color_lightblueBox captionShift dropShadow\">\n                        <h3 className=\"mainHeaderFonts text-left\">Hamburg</h3>\n                        <p className=\"subHeadlineFonts text-left\">\n                            Platz der Republik in Altona\n                        </p>\n                        </div>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item interval={2000}>\n                    <img\n                        className=\"d-block w-100\"\n                        src={Carousel06}\n                        alt=\"Overlook point at Weißenburgpark\"\n                    />\n\n                    <Carousel.Caption>\n                        <div class=\"text-wrap\" className=\"color_lightblueBox captionShift dropShadow\">\n                        <h3 className=\"mainHeaderFonts text-left\">Stuttgart </h3>\n                        <p className=\"subHeadlineFonts text-left\">\n                            Overlook point at Weißenburgpark\n                        </p>\n                        </div>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item interval={2000}>\n                    <img\n                        className=\"d-block w-100\"\n                        src={Carousel07}\n                        alt=\"Frankfurt International Airport\"\n                    />\n\n                    <Carousel.Caption>\n                        <div class=\"text-wrap\" className=\"color_lightblueBox captionShift dropShadow\">\n                        <h3 className=\"mainHeaderFonts text-left\">Frankfurt </h3>\n                        <p className=\"subHeadlineFonts text-left\">\n                            Frankfurt International Airport\n                        </p>\n                        </div>\n                    </Carousel.Caption>\n                </Carousel.Item>\n                <Carousel.Item interval={2000}>\n                    <img\n                        className=\"d-block w-100\"\n                        src={Carousel08}\n                        alt=\"The Molecule Man in the Spree River\"\n                    />\n\n                    <Carousel.Caption>\n                        <div class=\"text-wrap\" className=\"color_lightblueBox captionShift dropShadow\">\n                        <h3 className=\"mainHeaderFonts text-left\">Berlin </h3>\n                        <p className=\"subHeadlineFonts text-left\">\n                            The Molecule Man in the Spree River\n                        </p>\n                        </div>\n                    </Carousel.Caption>\n                </Carousel.Item>\n            </Carousel>\n        </div>\n        </div>\n    );\n}\n\nexport default LandingBanner;","import { useState } from \"react\";\nimport { Nav, Image, Name, Container, Row, Col } from \"react-bootstrap\";\nimport { alignPropType } from \"react-bootstrap/esm/DropdownMenu\";\nimport { Link } from \"react-router-dom\";\nimport \"./HeaderBody.css\";\nimport \"../fonts.css\";\n\nimport Articles from \"../Articles/Articles\";\nimport LandingBanner from \"../LandingBanner/LandingBanner\";\n\nconst MainBody = (props) => {\n  // const [token, setToken] = useState(props.token);\n  const token = localStorage.getItem(\"token\");\n  return (\n    <Container fluid className=\"fullWidthImage\">\n      {/* Subnavbar code moved to Navbar component */}\n{/*       <Container fluid className=\"fullWidthImage\">\n        <Nav\n          bg=\"light\"\n          expand=\"lg\"\n          id=\"center\"\n          variant=\"light\"\n          defaultActiveKey=\"/\"\n          className=\"color_brandgradient stickyNav\"\n        >\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-1\">\n              <Link to=\"/guide\" className=\"mainHeaderFonts color_white\"> Guides </Link>\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-2\">\n              <Link to=\"/visas\" className=\"mainHeaderFonts color_white\"> Visas </Link>\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-3\">\n              <Link to=\"/healthInsurance\" className=\"mainHeaderFonts color_white\"> Insurance </Link>\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-4\">\n              <Link to=\"/applications\" className=\"mainHeaderFonts color_white\"> Everyday Life </Link>\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Container> */}\n      \n      <LandingBanner className=\"bannerShift\" />\n      \n      <Container className=\"our-mission-container mainBodyFont justifyText\">\n        <h1 className=\"mainHeaderFonts color_lightblue someTopPadding\">What we're about!</h1>\n        <hr className=\"color_lightblue_hr\" />\n        <h5 className=\"introText\">\n          <strong className=\"color_lightblue\">komunikate</strong> is a community \n          of people helping each other figure out all of the necessary steps when immigrating to Germany.\n\n          \n          Moving to another country can be challenging for anybody and\n          taking the right steps is often a maze that involves\n          endless hours of searching the internet to find the right answers. By\n          bringing together people who have already gone through the process of\n          coming to Germany and people who desire to move there, this community\n          will be your definitive guide in finding all your answers without\n          needing to go to dozens of websites.\n        </h5>\n      </Container>\n      {/* <div style={{ backgroundImage: `url(${HomePagePic})` }}></div> */}\n      {token ? \"\" : <Articles />}\n    </Container>\n  );\n};\n\nexport default MainBody;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\n\nconst year = new Date().getFullYear();\n\nconst Footer = () => {\n  return (\n    <Container className=\"themed-container footer-container\" fluid=\"true\">\n     <div className='footer color_darkblueBox'>\n       <div>\n          <span className=\"color_white \">Copyright © Komunikate {year} All Rights Reserved</span>\n        </div>\n        <div>\n       </div>\n     </div>\n    </Container>\n  );\n};\nexport default Footer;","import {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  Table,\n  Badge,\n  ListGroup,\n} from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom'\nimport axios from 'axios';\nimport \"./UserCard.css\";\nimport \"../fonts.css\";\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComments } from '@fortawesome/free-regular-svg-icons'\n\n\nconst UserProfile = ({setUser}) => {\n\n  let {id} = useParams();\n  let history = useHistory()\n  const [users, setUsers] = useState(false);\n\n  const fetchUsers = async () => {\n    await axios\n    .get(`https://stark-fjord-75040.herokuapp.com/users/${id}`)\n      .then((response) => setUsers(response.data.getUser))\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const handleClick = () => {\n    setUser({ id, name: users.username })\n    history.push('/messages')\n  }\n\n\n  return (\n    <Container className=\"outer-container-profile\" fluid>\n      <Container className=\"user-profile-container boxDropShadow bg-light\">\n      {users ? (\n        <Row>\n          <Col md={4}>\n           { users && <Card className=\"profile-card\">\n             \n                <Card.Body>\n                <div class=\"card-body align-items-center justify-content-center\">\n                  <div className=\"proPhotoSettings profileCircleShift\">\n                    <Card.Img\n                      className=\"card-image\"\n                      variant=\"top\"\n                      src={users.userImg || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"}\n                    />\n                  </div>\n                  {/* Mongodb Model key name is: first_name + last_name */}\n                  <Card.Title className=\"mainHeaderFonts nameSpacer\">\n                    {users.first_name} {users.last_name}\n                  </Card.Title>\n                  {/* Mongodb Model key Mentor or Seeker is: user_role */}\n                  <Badge variant=\"info\" className=\"buttonFonts\">\n                  {users.user_role}\n                  </Badge>{\" \"}\n                  {/* <p>Level 10 | 450 Points</p> */}\n                  {/* Mongodb Model key City in Germany is: city_in_germany */}\n                  {/* Mongodb Model key Year is: to_germany_year */}\n                  {/* Conditional render the next line. If user lives in Germany display 'Moved to', \n                      if not display \"Not living in Germany yet\" */}\n                  <Card.Text className=\"subHeadlineFonts\">\n                    { users.living_in_germany ? \"Currently Living in Germany\" : \"Planning on Moving to Germany\"}\n                  </Card.Text>\n                  <Button variant=\"info\" className=\"mt-auto buttonFonts\" block onClick={handleClick}>\n                      Komunikate! <FontAwesomeIcon icon={faComments} />\n                  </Button>\n\n                  </div>\n                </Card.Body>\n\n              </Card>\n              \n                }\n          </Col>\n\n          <Col className=\"table-column allAboutShift\" md={8}>\n            <h3 className=\"mainHeaderFonts\">All About {users.username}</h3>\n            {/* Mongodb Model key name for Mentor or Seeker is: user_role */}\n\n            <hr />\n            <p className=\"subHeadlineFonts\">\n              {users.userBio ? users.userBio : `Hi, my name is ${users.first_name} and I've always\n              wanted to move to Germany ever since I visited Berlin for the first time 5 years ago. \n              I celebrated New Year's eve at a party in Charlottenburg and at the stroke of midnight \n              the party moved to the rooftop where you can see a panorama of the city being lit up \n              by all of the fireworks. It was right then there that I knew I wanted to move to Germany! \n              `}\n            </p>\n            <hr />\n            <Table size=\"sm\">\n              <tbody>\n                <tr>\n                  <td className=\"mainBodyFont\">Nationality:</td>\n                  <td className=\"subHeadlineFonts\">{users.nationality}</td>\n                </tr>\n                <tr>\n                  <td className=\"mainBodyFont\">Languages:</td>\n                  <td className=\"subHeadlineFonts\">\n                  {users.languages[0]} {users.languages[1] && `, ${users.languages[1]}`}\n                    {users.languages[2] && `, ${users.languages[2]}`}\n                    {users.languages[3] && `, ${users.languages[3]}`}\n                    {users.languages[4] && `, ${users.languages[4]}`}\n                    {users.languages[5] && `, ${users.languages[5]}`}\n\n                    </td>\n                </tr>\n                <tr>\n                  <td className=\"mainBodyFont\">Professional Status:</td>\n                  <td className=\"subHeadlineFonts\">Student</td>\n                </tr>\n              </tbody>\n            </Table>\n            <hr />\n            <p className=\"subHeadlineFonts\">\n            {users.interests ? users.interests : `Hiking, Traveling, Food, Learning new things, Photography`}\n            </p>\n\n          </Col> \n        </Row> )\n         : \"Loading...\" }\n      </Container>\n    </Container>\n  );\n};\n\nexport default UserProfile;\n","import {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  Badge,\n  Form,\n} from \"react-bootstrap\";\nimport \"./UserLoggedin.css\";\nimport Articles from \"../Articles/Articles\";\nimport UserCard from \"../Card/UserCard\";\nimport HeaderBody from \"../HeaderSection/HeaderBody\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from 'axios';\nimport ISO6391 from 'iso-639-1'\nimport { Link, useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComments } from '@fortawesome/free-regular-svg-icons'\n\n\n\nconst UserLoggedIn = ({ token, setUser }) => {\n\n  const [randomUsers, setRandomUsers] = useState();\n  const languagesRef = useRef()\n  const citiesRef = useRef()\n  const roleRef = useRef()\n  const languagesArray = ISO6391.getAllNames()\n  let history = useHistory()\n\n  const handleClick = (id, name) => {\n    setUser({ id: id, name: name })\n    history.push('/messages')\n  }\n\n\n  const fetchRandomUsers = async () => {\n    await axios\n      .get(\"https://stark-fjord-75040.herokuapp.com/users/randomUsers\")\n      .then((response) => setRandomUsers(response.data.users))\n      .catch((error) => console.log(error));\n  };\n\n\n  const searchedUsersGet = (queryString) => {\n    axios\n        .get(`https://stark-fjord-75040.herokuapp.com/users`,\n            {\n                params: queryString\n            }\n        )\n        .then(res => {\n            let users = res.data.users.map(({ username, languages, city_in_germany, user_role }) => ({ username, languages, city_in_germany, user_role }))\n            setRandomUsers(users)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n  }\n\n  useEffect(() => {\n    fetchRandomUsers();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const newQueryString = {languages: languagesRef.current.value, city_in_germany: citiesRef.current.value, user_role: roleRef.current.value}\n\n    searchedUsersGet(newQueryString)\n  }\n\n\n  return (\n/*     <Container className=\"outer-container-user-home\" fluid> */\n    <Container fluid className=\"fullWidthImage\">\n      <HeaderBody />\n      <Container>\n        <Row className=\"logged-in-container\">\n          <Col md={3}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group >\n              <Form.Label>By Language</Form.Label>\n              <Form.Control \n                as=\"select\"\n                ref={languagesRef}\n                >\n                    <option></option>\n                    {languagesArray.map(el => <option>{el}</option>)}\n              </Form.Control>\n              <Form.Label>By City</Form.Label>\n              <Form.Control as=\"select\" ref={citiesRef}>\n                <option value=''></option>\n                <option>Berlin</option>\n                <option>Frankfurt am Main</option>\n                <option>Hamburg</option>\n                <option>Stuttgart</option>\n                <option>Munich</option>\n              </Form.Control>\n              <Form.Label>By Role</Form.Label>\n              <Form.Control as=\"select\" ref={roleRef}>\n                  <option value=''></option>\n                  <option value='Mentor'>Mentor</option>\n                  <option value='Seeker'>Seeker</option>\n              </Form.Control>\n              <Button variant=\"secondary\" type=\"submit\" block>\n                Submit\n              </Button>\n            </Form.Group>\n            </Form>\n\n            <Button variant=\"secondary\" block>\n                Clear Search\n            </Button>\n            <br />\n{ randomUsers &&  randomUsers.map((user) => (\n\n<Card>\n\n<Card.Body>\n<Link to={`/users/${user._id}`}>\n    <div className=\"proPhotoLogged profileCircleShift\">\n      <Card.Img\n        className=\"proPhotos\"\n        variant=\"top\"\n        src={user.userImg || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"}\n      />\n    </div>\n\n    <Card.Title className=\"mainHeaderFonts nameSpacer\">{user.username}</Card.Title>\n\n  </Link>\n  <Badge variant=\"info\">{user.user_role}</Badge>\n  <Card.Text>\n    <p>\n    Speaks: <strong className=\"mainBodyFont textLeftAlign\">{user.languages[0]}\n    {user.languages[1] && `, ${user.languages[1]}`}\n    {user.languages[2] && `, ${user.languages[2]}`}\n    {user.languages[3] && `, ${user.languages[3]}`}\n    {user.languages[4] && `, ${user.languages[4]}`}\n    {user.languages[5] && `, ${user.languages[5]}`}</strong>\n    <br />\n    Nationality: <strong className=\"mainBodyFont\">{user.nationality}</strong>\n    </p>\n    </Card.Text>\n    <Button variant=\"info\" onClick={() => handleClick(user._id, user.username)} className=\"mt-auto buttonFonts\" block>\n                  Komunikate <FontAwesomeIcon icon={faComments} />\n                </Button>\n</Card.Body>\n\n</Card>  )) }\n\n</Col>\n<Col className=\"table-column\" md={9}>\n<Articles />\n</Col>\n</Row>\n\n</Container>\n</Container>\n);\n};\n\nexport default UserLoggedIn;","export default __webpack_public_path__ + \"static/media/Komunikate_Long_Black_v01.984987a5.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Container, Row, Col, Form, Button, Breadcrumb } from \"react-bootstrap\";\nimport \"./UserLogin.css\";\nimport Axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport logo from \"../../images/logos/Komunikate_Long_Black_v01.svg\";\n\nconst queryString = require(\"query-string\");\n\nconst UserLogin = ({ setJwt }) => {\n  let history = useHistory();\n  // The below token useState doesn't seem to be used here so it was commented out\n  /*   const [token, setToken] = useState(); */\n  const [pw, setPw] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const form = document.getElementById(\"loginForm\");\n    form.reset();\n    const user = queryString.stringify({\n      email: email,\n      password: pw,\n    });\n    loginFunction(user).then((res) => {\n      if (res) {\n        alert(\"You've logged in\");\n        setJwt(res);\n        /*         return <Redirect to='/frontpage' /> */\n        // props.history(\"/\")\n        history.push(\"/\");\n      } else {\n        alert(\"You've entered an incorrect E-mail or Password\");\n      }\n    });\n  };\n\n  const loginFunction = (user) => {\n    return (\n      Axios.post(\"https://stark-fjord-75040.herokuapp.com/login\", user)\n        /* return Axios.post(\"https://stark-fjord-75040.herokuapp.com/login\", user) */\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data);\n          // Commented out setToken below because it\n          // doesn't seem to be needed for userlogin to run\n          /*         setToken(response.data); */\n          return response.data; //redirect react-router to individual landing page\n        })\n        .catch((err) => {\n          console.log(err); //show error message, clear form, say try again\n        })\n    );\n  };\n\n  return (\n    <Container className=\"outer-container-login\" fluid>\n      <Container className=\"login-container-content bg-light\">\n        <Link to=\"/\">\n          <img\n            src={logo}\n            width=\"300\"\n            height=\"80\"\n            className=\"d-inline-block align-top\"\n            alt=\"Komunikate\"\n          />\n        </Link>\n\n        <Row className=\"justify-content-center\">\n          {/*           <Breadcrumb className=\"form-nav\">\n            <Breadcrumb.Item href=\"#\">Login</Breadcrumb.Item>\n            <Breadcrumb.Item href=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\n              SignUp\n            </Breadcrumb.Item>\n          </Breadcrumb> */}\n          <Form onSubmit={handleLogin} id=\"loginForm\" autocomplete=\"off\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>E-Mail</Form.Label>\n              <Form.Control\n                onChange={(e) => setEmail(e.target.value)}\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"E-mail address\"\n                required\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                onChange={(e) => setPw(e.target.value)}\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                required\n              />\n            </Form.Group>\n            <div className=\"font-weight-light\">\n              <p>\n                Not a member?&nbsp;\n                <Link to=\"/register\">Sign Up</Link>{\" \"}\n              </p>\n            </div>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"Remember me\" />\n            </Form.Group>\n            <Button className=\"login-button\" type=\"submit\">\n              Login\n            </Button>\n          </Form>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default UserLogin;\n","import { Container, Form, Col, Row, Button } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./UserSignup.css\";\nimport axios from \"axios\";\nimport ISO6391 from 'iso-639-1'\nimport jwt_decode from \"jwt-decode\";\n\n// npm install query-string\nconst queryString = require(\"query-string\");\n\nconst UserSignup = ({ token, setToken }) => {\n  const [data, setData] = useState(\"\");\n  const [login, setLogin] = useState(false);\n  const [register, setRegister] = useState(false);\n  const [pw, setPw] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUserName] = useState(\"\");\n  const [firstname, setFirstName] = useState(\"\");\n  const [lastname, setLastName] = useState(\"\");\n  const [nationality, setNationality] = useState(\"\");\n  const [languages, setLanguages] = useState(['']);\n  const [cityGermany, setCityGermany] = useState(false);\n  const [userRole, setUserRole] = useState(\"\");\n\n  // testing console\n  console.log(cityGermany);\n  console.log(userRole);\n\n  const languagesArray = ISO6391.getAllNames()\n\n  \n\n  // unneeded login code - can be deleted\n  /*   const handleLogin = (e) => {\n    e.preventDefault()\n    const form = document.getElementById(\"loginForm\");\n    form.reset();\n    const user = queryString.stringify({\n      email: email,\n      password: pw\n    })\n    loginFunction(user).then(res => {\n      if (res) {\n        alert('Welcome Back')\n      }\n      else {\n        alert(\"You\\\\'ve entered an incorrect E-mail or Password\")\n      }\n    })\n  }\n\n  const loginFunction = user => {\n    return axios\n      .post('https://stark-fjord-75040.herokuapp.com/login', user)\n      .then(response => {\n        setToken(response.data)\n        return response.data\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  } */\n\n  // code to prepare user inputted form data\n  const handleRegister = (e) => {\n    e.preventDefault();\n    //const form = document.getElementById(\"registerForm\");\n    /*     form.reset(); */\n\n    const user = queryString.stringify({\n      // mongo assigned name: variable name here\n      username: username,\n      email: email,\n      password: pw,\n      first_name: firstname,\n      last_name: lastname,\n      nationality: nationality,\n      languages: languages,\n      living_in_germany: cityGermany,\n      user_role: userRole,\n    });\n    console.log(user)\n\n    registerFunction(user).then((err) => {\n      if (err) {\n        alert(err);\n      } else {\n        alert(\"Your account has been registered. You can now login.\");\n        setLogin(true);\n        setRegister(false);\n      }\n    });\n  };\n\n  // Post inputted data from HandleRegister to the backend\n  const registerFunction = (newUser) => {\n    // heroku database is not being auto-updated from git repository\n    // running the backend server locally will run the backend through port 3002\n\n    return (\n      axios\n      .post(\"https://stark-fjord-75040.herokuapp.com/users/register\", newUser)\n        .then((res) => {\n          console.log(res);\n          console.log(\"Registered\");\n        })\n        .catch((err) => {\n          return err.response.data;\n        })\n    );\n  };\n\n    const handleAddLanguage = () => {\n      const newLanguages = [...languages, ''];\n      setLanguages(newLanguages);\n    };\n  \n    const handleInputChange = (index, e) => {\n      const newLanguages = [...languages];\n      newLanguages[index] = e.target.value;\n  \n      setLanguages(newLanguages);\n    };\n\n  return (\n    <Container className=\"outer-container-register\" fluid>\n      <Container className=\"content-container-register bg-light\">\n        <h3>Create an Account</h3>\n        <Form\n          className=\"signup-form\"\n          onSubmit={handleRegister}\n          id=\"registerForm\"\n          autoComplete=\"off\"\n        >\n          <Form.Group>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              onChange={(e) => setUserName(e.target.value)}\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Username\"\n              required\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              onChange={(e) => setPw(e.target.value)}\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              required\n            />\n          </Form.Group>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                onChange={(e) => setFirstName(e.target.value)}\n                type=\"text\"\n                id=\"firstname\"\n                name=\"firstname\"\n                placeholder=\"Enter First name\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n              <Form.Label>Last name</Form.Label>\n              <Form.Control\n                onChange={(e) => setLastName(e.target.value)}\n                type=\"text\"\n                id=\"lastname\"\n                name=\"lastname\"\n                placeholder=\"Enter Last name\"\n                required\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Col>\n            <Form.Label>Languages</Form.Label>\n          {languages.map((language, index) => (\n            // <div key={`${language}-${index}`}>\n              //{console.log(`${language}-${index}`)}\n              <Form.Group as={Col}>\n\n              <Form.Control \n                as=\"select\"\n                value={language}\n                //defaultValue=''\n                // onChange={(e) => setLanguages(...languages, e.target.value)}\n                id=\"languages\"\n                name=\"languages\"\n                required\n                onChange={(e) => handleInputChange(index, e)}\n                >\n                    <option></option>\n                    {languagesArray.map(el => <option>{el}</option>)}\n              </Form.Control>\n            </Form.Group>              \n            //</div>\n          ))}\n            <Button\n                type=\"button\"\n                onClick={() => handleAddLanguage()}\n              >\n                +\n            </Button>\n            </Col>\n\n          \n\n            <Form.Group as={Col}>\n              <Form.Label>Nationality</Form.Label>\n              <Form.Control\n                onChange={(e) => setNationality(e.target.value)}\n                type=\"text\"\n                id=\"nationality\"\n                name=\"nationality\"\n                placeholder=\"What is your nationality?\"\n                required\n              />\n            </Form.Group>\n          </Form.Row>\n\n          {/*         <Form.Group>\n          <Form.Label>Do you live in Germany yet?</Form.Label>\n          <Form.Control onChange={(e) => setCityGermany(e.target.value)} type=\"text\" id=\"cityGermany\" name=\"cityGermany\" placeholder=\"leave blank if unknown\"/>\n        </Form.Group> */}\n\n          <Form.Group id=\"formGridCheckbox form-check-inline\">\n            <h6>Do you live in Germany yet?</h6>\n            <Form.Check\n              onChange={(e) => setCityGermany(e.target.id)}\n              value='true'\n              name=\"userCity\"\n              inline\n              type=\"radio\"\n              label=\"Yes, I do\"\n              id=\"true\"\n              required\n            />\n            <Form.Check\n              onChange={(e) => setCityGermany(e.target.id)}\n              value='false'\n              name=\"userCity\"\n              inline\n              type=\"radio\"\n              label=\"No, not yet\"\n              id=\"false\"\n              required\n            />\n          </Form.Group>\n\n          <Form.Group id=\"formGridCheckbox form-check-inline\">\n            <h6>\n              Are you looking for information or do you want to help others?\n            </h6>\n            <Form.Check\n              onChange={(e) => setUserRole(e.target.id)}\n              value=\"Seeker\"\n              name=\"userType\"\n              type=\"radio\"\n              inline\n              label=\"Info-Seeker\"\n              id=\"Seeker\"\n              required\n            />\n            <Form.Check\n              onChange={(e) => setUserRole(e.target.id)}\n              value=\"Mentor\"\n              name=\"userType\"\n              type=\"radio\"\n              inline\n              label=\"Info-Guide\"\n              id=\"Mentor\"\n              required\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n      </Container>\n    </Container>\n  );\n};\n\nexport default UserSignup;\n\n\n\n\n \n\n\n          \n       \n\n\n{/* <Form.Group as={Col}>\n<Form.Label>Languages</Form.Label>\n<Form.Control \n  as=\"select\"\n  defaultValue='Choose ...'\n  onChange={(e) => setLanguages(...languages, e.target.value)}\n  id=\"languages\"\n  name=\"languages\"\n  required\n  >\n      <option>Choose ...</option>\n      {languagesArray.map(el => <option>{el}</option>)}\n</Form.Control>\n<Button>\n  Add language\n</Button>\n</Form.Group> */}\n\n\n\n","import {\n  Container,\n  Row,\n  Col,\n  Card,\n  Button,\n  Table,\n  Badge,\n  ListGroup,\n} from \"react-bootstrap\";\nimport \"./UserProfile.css\";\nimport \"../fonts.css\";\n\nconst UserProfile = () => {\n\n  return (\n    <Container className=\"outer-container-profile\" fluid>\n      <Container className=\"user-profile-container bg-light\">\n        <Row>\n          <Col md={4}>\n            <Card className=\"profile-card\">\n              <Card.Img\n                className=\"card-image\"\n                variant=\"top\"\n                src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\n              />\n              <Card.Body>\n                {/* Mongodb Model key name is: first_name + last_name */}\n                <Card.Title className=\"mainHeaderFonts\">\n                  Maxine Mustermann\n                </Card.Title>\n                {/* Mongodb Model key Mentor or Seeker is: user_role */}\n                <Badge variant=\"info\" className=\"buttonFonts\">\n                  Guide\n                </Badge>{\" \"}\n                {/* <p>Level 10 | 450 Points</p> */}\n                {/* Mongodb Model key City in Germany is: city_in_germany */}\n                {/* Mongodb Model key Year is: to_germany_year */}\n                {/* Conditional render the next line. If user lives in Germany display 'Moved to', \n                if not display \"Not living in Germany yet\" */}\n                <Card.Text className=\"subHeadlineFonts\">\n                  Moved to Germany in 2010\n                </Card.Text>\n                <Button variant=\"success\" className=\"mt-auto buttonFonts\" block>\n                  Send a Message\n                </Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col className=\"table-column\" md={8}>\n            <h3 className=\"mainHeaderFonts\">Username's Profile</h3>\n            {/* Mongodb Model key name for Mentor or Seeker is: user_role */}\n\n            <hr />\n            <p className=\"subHeadlineFonts\">\n              User's Bio goes here. User's Bio goes here. User's Bio goes here.\n              User's Bio goes here. User's Bio goes here. User's Bio goes here.\n              User's Bio goes here. User's Bio goes here. User's Bio goes here.\n              User's Bio goes here. User's Bio goes here. User's Bio goes here.\n              User's Bio goes here. User's Bio goes here. User's Bio goes here.\n            </p>\n            <hr />\n            <Table size=\"sm\">\n              <tbody>\n                <tr>\n                  <td className=\"mainBodyFont\">Nationality</td>\n                  <td className=\"subHeadlineFonts\">American</td>\n                </tr>\n                <tr>\n                  <td className=\"mainBodyFont\">Languages</td>\n                  <td className=\"subHeadlineFonts\">English, German</td>\n                </tr>\n                <tr>\n                  <td className=\"mainBodyFont\">Professional Status</td>\n                  <td className=\"subHeadlineFonts\">Student</td>\n                </tr>\n              </tbody>\n            </Table>\n            <hr />\n            <p className=\"subHeadlineFonts\">\n              Hobbies + Interests. Hobbies + Interests. Hobbies + Interests.\n              Hobbies + Interests. Hobbies + Interests. Hobbies + Interests.\n              Hobbies + Interests. Hobbies + Interests. Hobbies + Interests.\n              Hobbies + Interests. Hobbies + Interests. Hobbies + Interests.\n            </p>\n            {/*\n            <hr className=\"hr-posts\" />\n            <h4>Most recent posts</h4>\n\n             <ListGroup variant=\"flush\">\n              <ListGroup.Item action href=\"#link1\">\n                Moving to Germany in 2021\n                <br />\n                <small className=\"text-muted\">Last comment on ...</small>\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#link1\">\n                Berlin 101\n                <br />\n                <small className=\"text-muted\">Last comment on ...</small>\n              </ListGroup.Item>\n              <ListGroup.Item action href=\"#link1\">\n                Germany for beginners\n                <br />\n                <small className=\"text-muted\">Last comment on ...</small>\n              </ListGroup.Item>\n            </ListGroup> */}\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default UserProfile;\n","import {\n  Container,\n  Row,\n  Col,\n  ListGroup,\n  Form,\n  Button,\n  Popover,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport \"./UserSettings.css\";\nimport \"../fonts.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst UserSettings = ({ token }) => {\n  const [userInfo, setUserInfo] = useState({});\n  const [email, setEmail] = useState();\n  const [userName, setUserName] = useState(false);\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [nationality, setNationality] = useState();\n  const [languages, setLanguages] = useState();\n  const [livingGermany, setLivingGermany] = useState();\n  const [userRole, setUserRole] = useState();\n  const [workingRole, setWorkingRole] = useState();\n  const [bio, setBio] = useState();\n  const [proPhoto, setProPhoto] = useState();\n  const [hobbies, setHobbies] = useState();\n\n  const queryString = require(\"query-string\");\n\n  useEffect(() => {\n    fetchUserInfo();\n  }, [token.id]);\n\n  useEffect(() => {\n    setEmail(userInfo.email);\n    setUserName(userInfo.username);\n    setFirstName(userInfo.first_name);\n    setLastName(userInfo.last_name);\n    setNationality(userInfo.nationality);\n    setLanguages(userInfo.languages);\n    setLivingGermany(userInfo.living_in_germany);\n    setUserRole(userInfo.user_role);\n    setWorkingRole(userInfo.working_role);\n    setBio(userInfo.userBio);\n    setProPhoto(userInfo.userImg);\n    setHobbies(userInfo.interests)\n  }, [userInfo]);\n\n  const fetchUserInfo = async () => {\n    if (token.id) {\n      axios\n        .get(`https://stark-fjord-75040.herokuapp.com/users/${token.id}`)\n        .then((res) => setUserInfo(res.data.getUser))\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const updateProfile = () => {\n    const newUserInfo = queryString.stringify({\n      username: userName,\n      email: email,\n      first_name: firstName,\n      last_name: lastName,\n      nationality: nationality,\n      living_in_germany: livingGermany,\n      user_role: userRole,\n      languages: languages,\n      working_role: workingRole,\n      userBio: bio,\n      userImg: proPhoto,\n      interests: hobbies\n    });\n    updateUserInfo(newUserInfo).then((res) => {\n      if (!res) {\n        alert(\"Your information has been changed\");\n        /* window.location.reload(); */\n      } else alert(\"Oops, something went wrong...\");\n    });\n  };\n\n  const updateUserInfo = async (data) => {\n    if (token.id) {\n      axios\n        .put(`https://stark-fjord-75040.herokuapp.com/users/${token.id}`, data)\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Title as=\"h3\">Update Password</Popover.Title>\n      <Popover.Content>\n        <Form>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              // onChange={(e) => setPw(e.target.value)}\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              // onChange={(e) => setPw(e.target.value)}\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n          </Form.Group>\n          <Button variant=\"info\" type=\"submit\">\n            Update\n          </Button>\n        </Form>\n      </Popover.Content>\n    </Popover>\n  );\n\n  const UpdatePassword = () => (\n    <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n      <Button className=\"password-button buttonFonts\" variant=\"info\">\n        Update Password\n      </Button>\n    </OverlayTrigger>\n  );\n  /* List of Fields that are currently not working:\nShare about yourself/ UserBio\nYear to Germany\nMoved to\n*/\n  return (\n    <Container className=\"outer-container-settings\" fluid>\n      <Container className=\"content-container bg-light\">\n        <Row>\n          <Col sm={3}>\n            <div className=\"proPhotoSettings centerImage\">\n              <div className=\"centerImage\">\n                <img\n                  /* className=\"user-image\" */\n                  src={proPhoto}\n                  alt=\"Generic placeholder\"\n                />\n              </div>\n            </div>\n            <ListGroup className=\"\" variant=\"flush\">\n              <Button className=\"button-photo buttonFonts\" variant=\"info\">\n                Update Photo\n              </Button>{\" \"}\n              <ListGroup.Item\n                className=\"item-list mainBodyFont\"\n                action\n                href=\"#link1\"\n              >\n                About You\n              </ListGroup.Item>\n              <ListGroup.Item\n                className=\"item-list mainBodyFont\"\n                action\n                href=\"#link1\"\n              >\n                Privacy Policy\n              </ListGroup.Item>\n              <ListGroup.Item\n                className=\"item-list mainBodyFont\"\n                action\n                href=\"#link1\"\n              >\n                Notifications\n              </ListGroup.Item>\n              <UpdatePassword />\n            </ListGroup>\n          </Col>\n\n          {/* Start of Input Fields */}\n          {userName ? (\n            <>\n              <Col md={9}>\n                <h3 className=\"mainHeaderFonts\">User Type</h3>\n                <Form.Group id=\"formGridCheckbox form-check-inline\">\n                  <h6 className=\"subHeadlineFonts\">\n                    Are you looking for information or do you want to help\n                    others?\n                  </h6>\n                  <Form.Check\n                    onChange={(e) => setUserRole(e.target.id)}\n                    checked={userRole === \"Seeker\"}\n                    name=\"userType\"\n                    type=\"radio\"\n                    inline\n                    label=\"Info-Seeker\"\n                    className=\"formFonts\" \n                    id=\"Seeker\"\n                    required\n                  />\n                  <Form.Check\n                    onChange={(e) => setUserRole(e.target.id)}\n                    checked={userRole === \"Mentor\"}\n                    name=\"userType\"\n                    type=\"radio\"\n                    inline\n                    label=\"Info-Guide\"\n                    className=\"formFonts\"\n                    id=\"Mentor\"\n                    required\n                  />\n                </Form.Group>\n                <hr />\n                <Form.Group as={Col}>\n                  <h3 className=\"mainHeaderFonts\">\n                    Share a little about yourself!\n                  </h3>\n                  {/*               <Form.Label className=\"mainHeaderFonts\">\n                Share a little about yourself!\n              </Form.Label> */}\n                  <Form.Control\n                    onChange={(e) => setBio(e.target.value)}\n                    value={bio}\n                    type=\"text\"\n                    id=\"userBio\"\n                    name=\"userBio\"\n                    placeholder=\"Share a little about yourself!\"\n                    className=\"formFonts\"\n                    as=\"textarea\"\n                    rows=\"5\"\n                  />\n                </Form.Group>\n                <hr />\n                <Form.Row>\n                  <Form.Group md={12} lg={6} as={Col}>\n                    <Form.Label className=\"mainHeaderFonts\">\n                      Username\n                    </Form.Label>\n                    <Form.Control\n                      onChange={(e) => setUserName(e.target.value)}\n                      value={userName}\n                      type=\"text\"\n                      id=\"username\"\n                      name=\"username\"\n                      placeholder=\"Enter Username\"\n                      className=\"formFonts\"\n                      required\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col}>\n                    <Form.Label className=\"mainHeaderFonts\">Email</Form.Label>\n                    <Form.Control\n                      onChange={(e) => setEmail(e.target.value)}\n                      value={email}\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Enter Email address\"\n                      className=\"formFonts\"\n                      required\n                    />\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group md={12} lg={6} as={Col}>\n                    <Form.Label className=\"mainHeaderFonts\">\n                      First Name\n                    </Form.Label>\n                    <Form.Control\n                      onChange={(e) => setFirstName(e.target.value)}\n                      value={firstName}\n                      type=\"text\"\n                      id=\"firstname\"\n                      name=\"firstname\"\n                      placeholder=\"Enter First name\"\n                      className=\"formFonts\"\n                      required\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col}>\n                    <Form.Label className=\"mainHeaderFonts\">\n                      Last name\n                    </Form.Label>\n                    <Form.Control\n                      onChange={(e) => setLastName(e.target.value)}\n                      value={lastName}\n                      type=\"text\"\n                      id=\"lastname\"\n                      name=\"lastname\"\n                      placeholder=\"Enter Last name\"\n                      className=\"formFonts\"\n                      required\n                    />\n                  </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                  <Form.Group md={12} lg={6} as={Col}>\n                    <Form.Label className=\"mainHeaderFonts\">\n                      Languages\n                    </Form.Label>\n                    <Form.Control\n                      onChange={(e) => setLanguages(e.target.value)}\n                      // onChange={(e) => setLanguages(e.target.value)}\n/*                       value={languages.map((e) => ` ${e}`)} */\n                      value={languages}\n                      type=\"text\"\n                      id=\"languages\"\n                      name=\"languages\"\n                      placeholder=\"What languages do you speak?\"\n                      className=\"formFonts\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col}>\n                    <Form.Label className=\"mainHeaderFonts\">\n                      Nationality\n                    </Form.Label>\n                    <Form.Control\n                      onChange={(e) => setNationality(e.target.value)}\n                      value={nationality}\n                      type=\"text\"\n                      id=\"nationality\"\n                      name=\"nationality\"\n                      placeholder=\"What is your nationality?\"\n                      className=\"formFonts\"\n                    />\n                  </Form.Group>\n                </Form.Row>\n                <hr />\n                <Form.Row>\n                  {/*               <Form.Group md={12} lg={6} as={Col}> */}\n                  <Form.Group id=\"formGridCheckbox form-check-inline\">\n                    <h6 className=\"subHeadlineFonts\">\n                      Are you a student or already working?\n                    </h6>\n                    <Form.Check\n                      onChange={(e) => setWorkingRole(e.target.id)}\n                      checked={workingRole === \"Studying\"}\n                      name=\"workingRole\"\n                      type=\"radio\"\n                      inline\n                      label=\"Studying\"\n                      id=\"Studying\"\n                      className=\"formFonts\"\n                      required\n                    />\n                    <Form.Check\n                      onChange={(e) => setWorkingRole(e.target.id)}\n                      checked={workingRole === \"Working\"}\n                      name=\"workingRole\"\n                      type=\"radio\"\n                      inline\n                      label=\"Working\"\n                      id=\"Working\"\n                      className=\"formFonts\"\n                      required\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} id=\"formGridCheckbox form-check-inline\">\n                    <h6 className=\"subHeadlineFonts\">\n                      Do you live in Germany yet?\n                    </h6>\n                    <Form.Check\n                      onChange={(e) => setLivingGermany(true)}\n                      checked={livingGermany}\n                      name=\"userCity\"\n                      inline\n                      type=\"radio\"\n                      label=\"Yes, I do\"\n                      id=\"true\"\n                      className=\"formFonts\"\n                      required\n                    />\n                    <Form.Check\n                      onChange={(e) => setLivingGermany(false)}\n                      checked={!livingGermany}\n                      name=\"userCity\"\n                      inline\n                      type=\"radio\"\n                      label=\"No, not yet\"\n                      id=\"false\"\n                      className=\"formFonts\"\n                      required\n                    />\n                  </Form.Group>\n                </Form.Row>\n{/* \n                <Form.Row>\n                  <Form.Group as={Col}>\n                    <Form.Label className=\"mainHeaderFonts\">\n                      What year did you move to Germany?\n                    </Form.Label>\n                    <Form.Control\n                      //   onChange={(e) => setYearInGermany(e.target.value)}\n                      //   Mongodb model attribute: to_germany_year\n                      type=\"number\"\n                      id=\"to_germany_year\"\n                      name=\"to_germany_year\"\n                      placeholder=\"What year\"\n                      maxLength=\"4\"\n                      minLength=\"4\"\n                      min=\"1930\"\n                      max=\"2021\"\n                      className=\"formFonts\"\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col}>\n                    <Form.Label className=\"mainHeaderFonts\">\n                      Moved to\n                    </Form.Label>\n                    <Form.Control\n                      //   onChange={(e) => setLanguages(e.target.value)}\n                      type=\"text\"\n                      id=\"moving_city\"\n                      name=\"moving_city\"\n                      placeholder=\"Enter City\"\n                      className=\"formFonts\"\n                    />\n                  </Form.Group>\n                </Form.Row> */}\n                <hr />\n                <Form.Group as={Col}>\n                  <Form.Label className=\"mainHeaderFonts\">\n                    Hobbies and Interests\n                  </Form.Label>\n                  <Form.Control\n                    onChange={(e) => setHobbies(e.target.value)}\n                    value={hobbies}\n                    type=\"text\"\n                    id=\"interests\"\n                    name=\"interests\"\n                    placeholder=\"i.e. Biking, Traveling, Music, Football, etc...\"\n                    className=\"formFonts\"\n                    as=\"textarea\"\n                    rows=\"3\"\n                  />\n                </Form.Group>\n\n                <Button\n                  className=\"cancel-save-button buttonFonts\"\n                  variant=\"info\"\n                  type=\"submit\"\n                  onClick={updateProfile}\n                >\n                  Save Changes\n                </Button>\n                <Button\n                  className=\"cancel-save-button buttonFonts\"\n                  variant=\"info\"\n                  type=\"submit\"\n                >\n                  Cancel\n                </Button>\n              </Col>\n            </>\n          ) : (\n            \"loading\"\n          )}\n          {/* End of User Input Fields */}\n        </Row>\n      </Container>\n    </Container>\n  );\n};\n\nexport default UserSettings;\n","import { useContext, useEffect, useState, createContext } from 'react'\nimport io from 'socket.io-client'\n\nconst SocketContext = createContext()\n\nexport function useSocket() {\n  return useContext(SocketContext)\n}\n\nexport function SocketProvider({ idUser, children }) {\n  const [socket, setSocket] = useState()\n  const id = idUser._id\n\n  useEffect(() => {\n\n    const newSocket = io(\n      'https://stark-fjord-75040.herokuapp.com',\n      { query: { id } }\n    )\n\n    newSocket.on('connect', () => {\n      console.info('connected');\n    });\n\n    setSocket(newSocket);\n\n    return () => newSocket.disconnect()\n  }, [id])\n\n  return (\n    <SocketContext.Provider value={socket}>\n      {children}\n    </SocketContext.Provider>\n  )\n}","import { useContext, useState, useEffect, createContext } from 'react'\nimport axios from 'axios'\nimport { useSocket } from './SocketProvider'\n\nconst PORT = 'https://stark-fjord-75040.herokuapp.com'\n// Pointing the port to the .env doesn't seem to work?\n/* process.env.REACT_APP_ENDPOINT ||  */\n\nconst ContactsContext = createContext()\n\nexport const useContacts = () => {\n    return useContext(ContactsContext)\n}\n\nexport function ContactsProvider({ token, children }) {\n    const [contacts, setContacts] = useState([]) //storing searched contacts, initially set to all contacts\n    const [mapContacts, setMapContacts] = useState([]) //storing all contacts\n    const [connectedUsers, setConnectedUsers] = useState([])\n    const socket = useSocket()\n\n\n    // const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n    // const createContact = (id, name) => { //was passed as a prop\n    //     setContacts(prevContacts => {\n    //         return [...prevContacts, {id, name}]\n    //     })\n    // }\n\n\n    const searchedUsersGet = (queryString) => {\n        axios\n            .get(`${PORT}/users`,\n                {\n                    headers: {\n                        'auth-token': token,\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    },\n                    params: queryString\n                }\n            )\n            .then(res => {\n                let contacts = res.data.users.map(({ _id, username, languages, city_in_germany, user_role, userImg\n                }) => ({ _id, username, languages, city_in_germany, user_role, userImg,\n                    isChecked: false }))\n                setContacts(contacts)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    const usersGet = () => {\n        axios\n            .get(`${PORT}/users`,\n                {\n                    headers: {\n                        'auth-token': token,\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    }\n                }\n            )\n            .then(res => {\n                console.log(res)\n                let allContacts = res.data.users.map(({ _id, username }) => ({ _id, username })) \n                setMapContacts(allContacts)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    }\n\n\n\n    useEffect(() => {\n        if (token) {\n            usersGet()\n            searchedUsersGet('')\n        }\n    }, [token])\n\n\n    useEffect(() => {\n        if (!socket) return\n\n        socket.on('user-joined', data => {\n            setConnectedUsers(data)\n        })\n\n        socket.on('user-left', data => {\n            setConnectedUsers(data)\n        })\n\n        return () => {\n            socket.off('user-joined')\n            socket.off('user-left')\n        }\n    }, [socket])\n\n    // const sendMessage = (recipients, text) => {\n    //     socket.emit('send-message', { recipients, text })\n\n    //     addMessageToConversation({ recipients, text, sender: id})\n    // }\n\n\n\n\n    return (\n        <ContactsContext.Provider value={{ contacts, setContacts, mapContacts, connectedUsers, searchedUsersGet }}>\n            {children}\n        </ContactsContext.Provider>\n    )\n}\n","import { useContext, useState, useEffect, useCallback, createContext } from 'react'\nimport { useHistory } from 'react-router'\nimport axios from 'axios'\nimport { useContacts } from './ContactsProvider'\nimport { useSocket } from './SocketProvider'\n//import useLocalStorage from '../hooks/useLocalStorage';\n\n\nconst PORT = 'https://stark-fjord-75040.herokuapp.com'\n\nconst ConversationsContext = createContext()\n\nexport const useConversations = () => {\n    return useContext(ConversationsContext)\n}\n\nexport function ConversationsProvider({ token, idUser, children, user, setUser }) {\n    const [conversations, setConversations] = useState([]) //useLocalStorage('conversations', [])\n    const [selectedConversationIndex, setSelectedConversationIndex] = useState(0)\n    const { mapContacts } = useContacts()\n    const socket = useSocket()\n    const id = idUser._id\n    \n    \n\n\n    const arrayEquality = (a, b) => {\n\n        if (a.length !== b.length) { return false }\n\n        a.sort()\n        b.sort()\n\n        const result = a.every((element, index) => {\n            return element === b[index]\n        })\n\n        return result\n    }\n\n\n    const getConversations = () => {\n        axios\n            .get(`${PORT}/conversations/ind`,\n                {\n                    headers: {\n                        'auth-token': token,\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    }\n                }\n            )\n            .then(res => {\n                console.log(res)\n                if (Array.isArray(res.data)) {\n                    const newConversations = res.data.map(el => {\n                        const recipients = el.participants.filter(p => p !== id)\n                        const messages = el.messages\n                        return { recipients, messages }\n                    })\n                    if (user) {\n                        const convIndex = newConversations.findIndex(conversation => conversation.recipients.length === 1 ? conversation.recipients[0] === user.id : false\n                        );\n\n                        setConversations(prevConv => convIndex >= 0 ? newConversations : [...newConversations, { recipients: [user.id], messages: [] }]);\n                        setSelectedConversationIndex(convIndex >= 0 ? convIndex : newConversations.length);\n                        setUser()\n                    } else if (!conversations.length) {\n                        setConversations(newConversations);\n                    }\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    useEffect(() => {\n        if (token && id) getConversations()\n    }, [token, id, user])\n\n\n\n\n\n\n    const createConversation = (recipients) => {\n        setConversations(prevConversations => {\n            return [...prevConversations, { recipients, messages: [] }]\n        })\n    }\n\n    //this function is called when we send messages to other people, but also from the server when we receive a message >> taking messages from sender but also taking messages from others\n    //here, the main action of the app happens\n    //THIS GONNA BE USECALLBACK, because we don't want this function to be rebuild on every rerender\n    const addMessageToConversation = useCallback(({ recipients, text, sender }) => {\n        setConversations(prevConversations => {\n            let madeChange = false //evaluates whether a new conversations has to be created or whether the message is to be added to an existing conversation (if false, create; if true, add)\n            const newMessage = { sender, text }\n\n            //see whether recipients matches conversations and update this conversation\n            const newConversations = prevConversations.map(conversation => {\n                if (arrayEquality(conversation.recipients, recipients)) {\n                    madeChange = true\n                    return {\n                        ...conversation,\n                        messages: [...conversation.messages, newMessage]\n                    }\n                }\n\n                return conversation\n            })\n            if (madeChange) {\n                return newConversations\n            } else {\n                return [\n                    ...prevConversations,\n                    { recipients, messages: [newMessage] }\n                ]\n            }\n        })\n    }, [setConversations])\n\n    useEffect(() => {\n        if (!socket) return\n\n        socket.on('receive-message', addMessageToConversation)\n\n        return () => socket.off('receive-message')\n    }, [socket, addMessageToConversation])\n\n    const sendMessage = (recipients, text) => {\n        socket.emit('send-message', { recipients, text })\n\n        addMessageToConversation({ recipients, text, sender: id })\n    }\n\n\n    //recipient is only an id. we also want to get the name of the recipient\n    const formattedConversations = conversations.map((conversation, index) => {\n        const recipients = conversation.recipients.map(recipient => {\n            const contact = mapContacts.find(contact => {\n                return contact._id === recipient\n            })\n            let name = (contact && contact.username)\n            return { id: recipient, name }\n        })\n\n        const messages = conversation.messages.map(message => {\n            const contact = mapContacts.find(contact => {\n                return contact._id === message.sender\n            })\n            const name = (contact && contact.username)\n            const fromMe = id === message.sender\n            return { ...message, senderName: name, fromMe }\n        })\n\n        const selected = index === selectedConversationIndex\n        //if (selected) return { ...conversation, messages, recipients, selected, newMessage: false }\n        return { ...conversation, messages, recipients, selected }\n    })\n\n    // useEffect(() => {\n    //     setFormattedConversations(formattedConversationsFunc())\n    // }, [stringifiedConversations, selectedConversationIndex])\n\n    // useEffect(()=> {\n    //     setConversations(conversations.map(conversation => conversation.selected ? {...conversation, newMessage: false} : conversation))\n    // }, [formattedConversations])\n\n    const value = {\n        conversations: formattedConversations,\n        selectedConversation: formattedConversations[selectedConversationIndex],\n        sendMessage,\n        selectConversationIndex: setSelectedConversationIndex,\n        createConversation,\n        arrayEquality\n    }\n\n    return (\n        <ConversationsContext.Provider value={value}>\n            {children}\n        </ConversationsContext.Provider>\n    )\n}\n\n","import axios from \"axios\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\nimport \"../../fonts.css\";\nimport \"./Conversations.css\";\n\nexport default function Conversations() {\n  const { conversations, selectConversationIndex } = useConversations();\n  console.log(\"conversations\", conversations);\n\n  return (\n    <ListGroup variant=\"flush\">\n      {conversations.map((conversation, index) => (\n        <ListGroup.Item\n          className=\"conversations-list\"\n          key={index}\n          action\n          onClick={() => selectConversationIndex(index)}\n          active={conversation.selected}\n        >\n          <h5 className=\"mainHeaderFonts color_white\">\n          {conversation.recipients\n            .map((recipient) => recipient.name)\n            .join(\", \")}\n          </h5>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  );\n}\n\n//className=\"mainHeaderFonts color_white\"\n","import React, { useRef } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider'\nimport ISO6391 from 'iso-639-1'\n\nexport default function SearchModal({ closeModal }) {\n  const languagesRef = useRef()\n  const citiesRef = useRef()\n  const roleRef = useRef()\n  const usernameRef = useRef()\n  const { searchedUsersGet } = useContacts()\n\n  const languagesArray = ISO6391.getAllNames()\n  \n  //from the tutorial\n//   const [activeKey, setActiveKey] = useState(CONVERSATIONS_KEY)\n//   const [modalOpen, setModalOpen] = useState(false)\n//   const conversationsOpen = activeKey === CONVERSATIONS_KEY\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const newQueryString = {languages: languagesRef.current.value, city_in_germany: citiesRef.current.value, user_role: roleRef.current.value, username: usernameRef.current.value}\n\n    searchedUsersGet(newQueryString)\n\n    closeModal()\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>Search Komunikators</Modal.Header>\n      <Modal.Body>\n      <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Label>By Language</Form.Label>\n                <Form.Control as=\"select\" ref={languagesRef}>\n                    <option></option>\n                    {languagesArray.map(el => <option>{el}</option>)}\n                </Form.Control>\n                <Form.Label>By City</Form.Label>\n                <Form.Control as=\"select\" ref={citiesRef}>\n                    <option ></option>\n                    <option value='Berlin'>Berlin</option>\n                    <option value='Frankfurt am Main'>Frankfurt am Main</option>\n                    <option value='Hamburg'>Hamburg</option>\n                    <option value='Stuttgart'>Stuttgart</option>\n                    <option value='Munich'>Munich</option>\n                </Form.Control>\n                <Form.Label>By Role</Form.Label>\n                <Form.Control as=\"select\" ref={roleRef}>\n                    <option value=''></option>\n                    <option value='Mentor'>Mentor</option>\n                    <option value='Seeker'>Seeker</option>\n                </Form.Control>\n                <Form.Label>By Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Username\" ref={usernameRef} />\n                <Form.Text className=\"text-muted\">\n                    Please leave the fields you don't want to search for blank.\n                </Form.Text>\n                </Form.Group>\n                <Button type=\"submit\" block>\n                    Search\n                </Button> \n        </ Form>        \n      </Modal.Body>\n    </>\n  )\n}\n\n\n    \n\n{/* <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Id</Form.Label>\n            <Form.Control type=\"text\" ref={idRef} required />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" ref={nameRef} required />\n          </Form.Group>\n          <Button type=\"submit\">Create</Button>\n        </Form> */}","import React, { useState } from \"react\";\nimport { Link } from 'react-router-dom'\nimport { Modal, Form, Button, Badge } from \"react-bootstrap\";\nimport { useContacts } from \"../contexts/ContactsProvider\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\nimport SearchModal from \"./SearchModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faComment } from '@fortawesome/free-regular-svg-icons'\nimport { faCommentSlash } from '@fortawesome/free-solid-svg-icons'\nimport \"../../fonts.css\";\nimport \"./Contacts.css\";\n\nexport default function Contacts({ setActiveKey, conversationsKey, idUser }) {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n  const { contacts, setContacts, connectedUsers, searchedUsersGet } = useContacts();\n  const { conversations, createConversation, selectConversationIndex, arrayEquality, } = useConversations();\n\n  //method to filter out duplicate conversations\n  const conversationsPlusRecipients = conversations\n    .map((conversation) => conversation.recipients)\n    .map((el) => el.map((el) => el.id));\n\n  const checkDuplicate = () => {\n    return conversationsPlusRecipients.filter((el) => arrayEquality(el, selectedContactIds));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (selectedContactIds.length) {\n      if (checkDuplicate().flat().length) {\n        const selectIndex = conversationsPlusRecipients.findIndex(\n          (recipientsArray) =>\n            arrayEquality(recipientsArray, checkDuplicate().flat())\n        );\n        selectConversationIndex(selectIndex);\n        setActiveKey(conversationsKey);\n      } else {\n        createConversation(selectedContactIds);\n        selectConversationIndex(conversations.length);\n        setActiveKey(conversationsKey);\n      }\n    } else {\n      alert(\"No contacts selected\");\n    }\n    setSelectedContactIds([]);\n    const checkboxFalse = contacts.map((contact) => ({\n      ...contact,\n      isChecked: false,\n    }));\n    setContacts(checkboxFalse);\n  };\n\n  const handleCheckboxChange = (e) => {\n    let checkedArray = contacts.map((contact) => ({ ...contact }));\n    let contactIndex = checkedArray.findIndex(\n      (contact) => contact._id === e.target.value\n    );\n    checkedArray[contactIndex].isChecked = e.target.checked;\n    setContacts(checkedArray);\n    setSelectedContactIds([\n      ...selectedContactIds,\n      checkedArray[contactIndex]._id,\n    ]);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const handleClear = () => {\n    searchedUsersGet()\n}\n\n  return (\n    <>\n      <div className=\"d-flex flex-column flex-grow-1\">\n        <div\n          style={{\n            position: \"sticky\",\n            top: 0,\n            zIndex: 10,\n            backgroundColor: \"white\",\n          }}\n          className=\"p-2 border border-top border-right small\"\n        >\n{/*           <Button\n            className=\"contact-field-buttons\"\n            form=\"checkbox-form\"\n            type=\"submit\"\n            size=\"lg\"\n            block\n          >\n            Komunikate\n          </Button> */}\n          <Button onClick={() => setModalOpen(true)} className=\"contact-field-buttons\" block>Search Komunikators</Button>\n                <br/>\n                <Button onClick={handleClear} className=\"contact-field-buttons\" block>Clear Search</Button>\n                <br/>\n                <Button form='checkbox-form' type='submit' size=\"lg\" className=\"contact-field-buttons\" block>Komunikate</Button>\n       \n          <br />\n{/*           <Button\n            className=\"contact-field-buttons\"\n            onClick={() => setModalOpen(true)}\n            block\n          >\n            Search Komunikators\n          </Button> */}\n        </div>\n        <div className=\"flex-grow-1 overflow-auto komunikators-list\">\n          <Form onSubmit={handleSubmit} id=\"checkbox-form\">\n            {contacts.map(\n              (contact) =>\n                contact._id !== idUser._id && (\n                  <Form.Group key={contact._id}>\n                    <Form.Check\n                      type=\"checkbox\"\n                      checked={contact.isChecked}\n                      value={contact._id}\n                      label={\n                        <>\n                          <span>\n                            <h6 className=\"user-id\">\n                            <div className=\"profile-cropper\">\n                                    <Link to={`/users/${contact._id}`}>\n                                        <img src={contact.userImg || \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"}\n                                        width=\"40px\"\n                                        height=\"40px\"\n                                        alt=\"{contact.username}\" />\n                                    </Link>\n                                </div>\n                              {contact.username}&nbsp; \n                              {connectedUsers.includes(contact._id) ? (\n                                <Badge pill variant=\"success\">\n                                  <FontAwesomeIcon icon={faComment} /> {contact.user_role}\n                                </Badge>\n                              ) : (\n                                <Badge pill variant=\"secondary\">\n                                  <FontAwesomeIcon icon={faCommentSlash} /> {contact.user_role}\n                                </Badge>\n                              )}\n                            </h6>\n                            <small className=\"user-languages\">\n                              {contact.languages.map((el) => `${el} `)}\n                            </small>\n                            \n                          </span>\n                          <ul style={{ listStyleType: \"none\" }}>\n                            {/* <li>{contact.user_role}</li> */}\n                            {/* <li>{contact.languages.map((el) => el)}</li> */}\n                            <li>{contacts.city_in_germany}</li>\n                          </ul>\n                        </>\n                      }\n                      onChange={handleCheckboxChange}\n                    />\n                  </Form.Group>\n                )\n            )}\n          </Form>\n        </div>\n      </div>\n\n      <Modal show={modalOpen} onHide={closeModal}>\n        <SearchModal closeModal={closeModal} />\n      </Modal>\n    </>\n  );\n}\n\n","import { useState } from \"react\";\nimport { Tab, Nav, Container, Row, Col } from \"react-bootstrap\";\nimport Conversations from \"./Conversations\";\nimport Contacts from \"./Contacts\";\n\nconst CONVERSATIONS_KEY = \"conversations\";\nconst CONTACTS_KEY = \"contacts\";\n\nexport default function Sidebar({ idUser }) {\n    const [activeKey, setActiveKey] = useState(CONVERSATIONS_KEY)\n    //const conversationsOpen = activeKey === CONVERSATIONS_KEY //check whether conversion tab is open\n\n\n  return (\n    <div style={{ width: \"500px\" }} className=\"d-flex flex-column\">\n      <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\n        <Nav variant=\"tabs\" className=\"justify-content-center\">\n          <Nav.Item>\n            <Nav.Link className=\"color_darkblue\" eventKey={CONVERSATIONS_KEY}>\n              Conversations\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link className=\"color_darkblue\" eventKey={CONTACTS_KEY}>\n              Komunikators\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Tab.Content className=\"border border-right overflow-auto flex-grow-1\">\n          {/* have to add border here to make border-right working*/}\n          <Tab.Pane eventKey={CONVERSATIONS_KEY}>\n            <Conversations idUser={idUser} />\n          </Tab.Pane>\n          <Tab.Pane eventKey={CONTACTS_KEY}>\n            <Contacts\n              setActiveKey={setActiveKey}\n              conversationsKey={CONVERSATIONS_KEY}\n              idUser={idUser}\n            />\n          </Tab.Pane>\n        </Tab.Content>\n        <div\n          className=\"p-2 border border-top border-right small\"\n          style={{ borderWidth: \"medium\" }}\n        >\n          Username: <span className=\"text-muted\">{idUser.username}</span>\n        </div>\n      </Tab.Container>\n    </div>\n  );\n}\n","import React, { useState, useRef, useCallback } from 'react'\nimport { Form, InputGroup, Button } from 'react-bootstrap'\nimport { useConversations } from '../contexts/ConversationsProvider'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaperPlane } from '@fortawesome/free-regular-svg-icons'\nimport \"../../fonts.css\";\nimport \"./OpenConversations.css\";\n\n\nexport default function OpenConversations() {\n  const textRef = useRef();\n  const [text, setText] = useState(\"\");\n  const setRef = useCallback((node) => {\n    //i'd like to change this to a useRef!!\n    if (node) {\n      node.scrollIntoView({ smooth: true });\n    }\n  }, []);\n  const { sendMessage, selectedConversation } = useConversations();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //passing the id of the recipient and the text to the sendMessage function\n    sendMessage(\n      selectedConversation.recipients.map((recipient) => recipient.id),\n      text\n    );\n    setText(\"\");\n  };\n\n  const handleEnter = (e) => {\n    if (e.key === 'Enter') {\n      handleSubmit(e)\n    }\n  }\n\n  return (\n    <div className=\"d-flex flex-column flex-grow-1\">\n      <div className=\"flex-grow-1 overflow-auto\">\n        <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\n          {selectedConversation.messages.map((message, index) => {\n            const lastMessage =\n              selectedConversation.messages.length - 1 === index;\n            return (\n              <div\n                ref={lastMessage ? setRef : null}\n                key={index}\n                className={`my-1 d-flex flex-column ${\n                  message.fromMe\n                    ? \"align-self-end align-items-end\"\n                    : \"align-items-start\"\n                }`}\n              >\n                <div\n                  className={`rounded px-2 py-1 ${\n                    message.fromMe ? \"color_brandgradient text-white\" : \"border\"\n                  }`}\n                >\n                  {message.text}\n                </div>\n                <div\n                  className={`text-muted small ${\n                    message.fromMe ? \"text-right\" : \"\"\n                  }`}\n                >\n                  {message.fromMe ? \"You\" : message.senderName}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"m-2 \">\n          <InputGroup>\n            <Form.Control\n              as=\"textarea\"\n              required\n              value={text}\n              ref={textRef}\n              onChange={() => setText(textRef.current.value)}\n              style={{ height: \"100px\", resize: \"none\" }}\n            />\n                    <InputGroup.Append>\n                        <Button type=\"submit\"><FontAwesomeIcon icon={faPaperPlane} /><FontAwesomeIcon icon={faPaperPlane} /><FontAwesomeIcon icon={faPaperPlane} /></Button>\n                    </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n","import Sidebar from \"./Sidebar\";\nimport OpenConversations from \"./OpenConversations\";\nimport { useConversations } from \"../contexts/ConversationsProvider\";\n\nexport default function Dashboard({ idUser }) {\n    const { selectedConversation } = useConversations()\n    \n    return (\n        <div className='d-flex' style={{ height: '83vh' }}>\n            <Sidebar idUser={idUser}/>\n            {selectedConversation && <OpenConversations/>}\n        </div>        \n    )\n}\n","//import \"./Messenger.css\";\nimport Dashboard from './components/Dashboard'\nimport { ContactsProvider } from './contexts/ContactsProvider'\nimport { ConversationsProvider } from './contexts/ConversationsProvider'\nimport { SocketProvider } from './contexts/SocketProvider';\n\n\nconst Messenger = ({ userToken, user, setUser }) => {\n  const idUser = {_id: userToken.id, username: userToken.username}\n  const token = localStorage.getItem('token')\n  //reminder: idUser = {_id, username}\n  console.log(user, userToken)\n\n  return (   \n      <SocketProvider idUser={idUser}>\n        <ContactsProvider token={token}>\n          <ConversationsProvider idUser={idUser} token={token} user={user} setUser={setUser}>\n            <Dashboard idUser={idUser}/>\n          </ConversationsProvider>\n        </ContactsProvider>\n      </SocketProvider>\n  );\n}\n\nexport default Messenger;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './ArticleTemp.css';\nimport '../fonts.css'\nimport { useParams } from 'react-router-dom';\nimport {FaArrowCircleUp} from 'react-icons/fa';\n\nfunction ArticleTemp() {\n  let {id} = useParams()\n\n  const [post, setPost] = useState()\n\n  // Scroll up arrow logic starts here\n  const [showScroll, setShowScroll] = useState(false)\n  const checkScrollTop = () => {\n    if (!showScroll && window.pageYOffset > 200) {\n      setShowScroll(true)\n    } else if (showScroll && window.pageYOffset <= 200) {\n      setShowScroll(false)\n    }\n  };\n  window.addEventListener('scroll', checkScrollTop)\n\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n// Scroll up arrow logic ends here\n\n  const calcDate = (time) => {\n    const event = new Date(time);\n    return event.toLocaleDateString({\n      hour: \"numeric\",\n      minute: \"numeric\",\n    });\n  };\n\n  const fetchArticle = async () => {\n    await axios\n      .get(`https://stark-fjord-75040.herokuapp.com/posts/${id}`)\n      .then((response) => setPost(response.data.getarticle))\n      .catch((error) => console.log(error));\n  };\n\n  useEffect(() => {\n    fetchArticle();\n  }, []);\n\n  return (\n    <div >\n    { post ? \n    \n        <>\n          <div className=\"top-container dropShadowLightBlue\">\n\n              <div className=\"article_top_left\">\n              <img\n          alt=\"img1\"\n          src={post.img1 || \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimg.fotocommunity.com%2Fsonnenuntergang-in-australien-32803daa-f98d-47d8-bcd3-8d8edde85379.jpg\"}\n          className=\"imgScale\"\n        />\n              </div>\n\n              <div className=\"article_top_right \">\n              \n      <h1 className=\"ArtHead textAlignLeft lessSpaceText\">{post.title}</h1>\n      <div className=\"hrHeight color_lightblue_hr\"></div>\n      <p className=\"ArtSub textAlignLeft\">{post.subtitle}</p>\n      <p className=\"moveTextUp formFonts\">Published: {calcDate(post.date)}</p>\n              </div>\n\n\n          </div>\n    \n    <div className=\"ArtFull\">\n\n      <section className=\"ArtSec\">\n        <p className=\"mainBodyFont\">\n         {post.body}\n        </p>\n      </section>\n      <section className=\"ArtSec\">\n        <img\n          alt=\"img2\"\n          src={post.img2 ||\"https://mediafiles.urlaubsguru.de/wp-content/uploads/2019/07/Oberpfaelzer-Wald_Mystische-Waelder-am-Goldsteig-im-Naturpark-Steinwald.jpg\"}\n          className=\"ArtImg\"\n        />\n        <p className=\"mainBodyFont\">\n         {post.body2}\n        </p>\n      </section>\n      <section className=\"ArtSec\">\n        <img\n          alt=\"img3\"\n          src={post.img3 ||\"http://haahilfm.com/wp-content/uploads/2019/11/K.jpg\"}\n          className=\"ArtImg\"\n        />\n        <p className=\"mainBodyFont\">\n          {post.body3}\n        </p>\n      </section>\n      <section className=\"ArtSec\">\n      </section>\n      <h6 className=\"ArtCreat\">Komunikate</h6>\n      </div>\n      \n        <div className=\"scrollPlacement\">\n          <FaArrowCircleUp\n            className=\"scrollTop\"\n            onClick={scrollTop}\n            style={{ height: 60, display: showScroll ? 'flex' : 'none' }}\n          />\n          \n        </div>\n\n        </> : 'loading'}\n\n    </div>\n  );\n}\n\nexport default ArticleTemp;\n","import { stringify } from 'query-string';\nimport {\n    fetchUtils,\n    GET_LIST,\n    GET_ONE,\n    GET_MANY,\n    GET_MANY_REFERENCE,\n    CREATE,\n    UPDATE,\n    UPDATE_MANY,\n    DELETE,\n    DELETE_MANY,\n} from 'react-admin';\n\n/**\n * Maps react-admin queries to a simple REST API\n *\n * The REST dialect is similar to the one of FakeRest\n * @see https://github.com/marmelab/FakeRest\n * @example\n * GET_LIST     => GET http://my.api.url/posts?sort=['title','ASC']&range=[0, 24]\n * GET_ONE      => GET http://my.api.url/posts/123\n * GET_MANY     => GET http://my.api.url/posts?filter={ids:[123,456,789]}\n * UPDATE       => PUT http://my.api.url/posts/123\n * CREATE       => POST http://my.api.url/posts\n * DELETE       => DELETE http://my.api.url/posts/123\n */\nexport default (apiUrl, httpClient) => {\n    /**\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} { url, options } The HTTP request parameters\n     */\n    const convertDataRequestToHTTP = (type, resource, params) => {\n        let url = 'https://stark-fjord-75040.herokuapp.com/';\n        const options = {};\n        switch (type) {\n            case GET_LIST: {\n                const { page, perPage } = params.pagination;\n                const { field, order } = params.sort;\n                // handle full-text\n                /*if (params.filter.q) {\n                    params.filter[\"$text\"] = { \"$search\": params.filter.q};\n                    delete params.filter.q;\n                }*/\n                const query = {\n                    // sort: JSON.stringify({[field]: order=='ASC'?0:1}),\n                    \n                    /*range: JSON.stringify([\n                        (page - 1) * perPage,\n                        page * perPage - 1,\n                    ]),*/\n                    // query: JSON.stringify(params.filter),\n                };\n                if (resource==='users') url = `${apiUrl}/${resource}`;\n               else if (resource==='posts') url = `${apiUrl}/posts`;\n               else url = `${apiUrl}/${resource}`;\n                break;\n            }\n            case GET_ONE:\n               if(resource==='posts') url = `${apiUrl}/posts/${params.id}`;\n               else url = `${apiUrl}/${resource}/${params.id}`;\n                break;\n            case GET_MANY: {\n                const query = {\n                    filter: JSON.stringify({ id: params.ids }),\n                };\n                url = `${apiUrl}/${resource}?${stringify(query)}`;\n                break;\n            }\n            case GET_MANY_REFERENCE: {\n                const { page, perPage } = params.pagination;\n                const { field, order } = params.sort;\n                const query = {\n                    sort: JSON.stringify({[field]: order=='ASC'?0:1}),\n                    skip: (page - 1) * perPage,\n                    limit: perPage,\n                    /*range: JSON.stringify([\n                        (page - 1) * perPage,\n                        page * perPage - 1,\n                    ]),*/\n                    query: JSON.stringify({\n                        ...params.filter,\n                        [params.target]: params.id,\n                    }),\n                };\n                url = `${apiUrl}/${resource}?${stringify(query)}`;\n                break;\n            }\n            case UPDATE:\n                url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'PUT';\n                options.data = JSON.stringify(params.data);\n                break;\n            case CREATE:\n                if (resource==='posts') url = `${apiUrl}/posts`\n                else url = `${apiUrl}/${resource}/register`;\n                options.method = 'POST';\n                options.data = JSON.stringify(params.data);\n                break;\n/*             case DELETE:\n                url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'DELETE';\n                break; */\n            case DELETE:\n                if (resource === 'posts') url = `${apiUrl}/posts/${params.id}`\n                else url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'DELETE';\n                break;\n\n            default:\n                throw new Error(`Unsupported fetch action type ${type}`);\n        }\n        return { url, options };\n    };\n\n    /**\n     * @param {Object} response HTTP response from fetch()\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} Data response\n     */\n    const convertHTTPResponse = (response, type, resource, params) => {\n        const { headers, data } = response;\n    \n        switch (type) {\n            case GET_LIST:\n            case GET_MANY:\n            case GET_MANY_REFERENCE:\n              console.log(data)\n              if (data.users){\n                return {\n                    data: data.users.map(item => {item.id = item._id; delete item._id; return item}),\n                    total: parseInt(\n                        headers['x-total-count'],\n                        0\n                    ),\n                };\n            }\n            else if (data.allarticles) {\n                return {\n                    data: data.allarticles.map(item => {item.id = item._id; delete item._id; return item}),\n                    total: parseInt(\n                        headers['x-total-count'],\n                        0\n                    ),\n                };\n            }\n            else return console.log('No Else Statement setup yet...')\n            case GET_ONE:\n            if (data.getarticle) {\n                let editArticle = data.getarticle\n                editArticle.id = editArticle._id\n                delete editArticle._id\n                console.log(editArticle)\n                return {data: editArticle}\n            }   \n            else {let editUser = data.getUser\n                editUser.id = editUser._id\n                delete editUser._id\n                console.log(editUser)\n                    return{data: editUser};\n                }\n            case DELETE:\n/*             if (data.deletearticle) {\n                let deleteArticle = data.deletearticle\n                deleteArticle.id = deleteArticle._id\n                delete deleteArticle._id\n                console.log(deleteArticle)\n                return {data: deleteArticle}\n            }   \n            else {let deleteUser = data.deleteUser\n                deleteUser.id = deleteUser._id\n                delete deleteUser._id\n                console.log(deleteUser)\n                    return{data: deleteUser};\n                }     */\n            case DELETE_MANY:\n                return {data: params}\n            default:\n                if (data && data._id) {\n                    data.id = data._id;\n                    delete data._id;\n                }\n                return { data };\n        }\n    };\n\n    /**\n     * @param {string} type Request type, e.g GET_LIST\n     * @param {string} resource Resource name, e.g. \"posts\"\n     * @param {Object} payload Request parameters. Depends on the request type\n     * @returns {Promise} the Promise for a data response\n     */\n    return (type, resource, params) => {\n        // simple-rest doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n        if (type === UPDATE_MANY) {\n            return Promise.all(\n                params.ids.map(id =>\n                    httpClient(`${apiUrl}/${resource}/${id}`, {\n                        method: 'PUT',\n                        body: JSON.stringify(params.data),\n                    })\n                )\n            ).then(responses => ({\n                data: responses.map(response => response.json),\n            }));\n        }\n        // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n        if (type === DELETE_MANY) {\n            return Promise.all(\n                params.ids.map(id =>\n                    httpClient(`${apiUrl}/${resource}/${id}`, {\n                        method: 'DELETE',\n                    })\n                )\n            ).then(responses => ({\n                data: responses.map(response => response.json),\n            }));\n        }\n\n        const { url, options } = convertDataRequestToHTTP(\n            type,\n            resource,\n            params\n        );\n\n        return httpClient(url, options).then(response =>\n            convertHTTPResponse(response, type, resource, params)\n        );\n    };\n};","import React from 'react';\nimport { \n    List, \n    Datagrid,\n    TextField, \n    EmailField,\n    EditButton,\n    DeleteButton,\n    BooleanField,\n    SelectField,\n} from 'react-admin';\n\nconst UserList = (props) => {\n    return (\n       <List {...props}>\n         <Datagrid>\n             <TextField source='username' />\n             <SelectField source=\"user_role\" choices={[\n            { id: 'Seeker', name: 'Seeker' },\n            { id: 'Mentor', name: 'Mentor' },\n        ]} />\n{/*              <EmailField source='email' />\n             <TextField source=\"userImg\" /> */}\n             <TextField source='first_name' />\n             <TextField source='last_name' />\n             <TextField source='id' />\n             <BooleanField source=\"admin\" />\n             <EditButton basePath='users' />\n             <DeleteButton basePath='users' />\n         </Datagrid>\n       </List>\n    )\n}\n\nexport default UserList;","import React from \"react\";\nimport { Create, SimpleForm, TextInput, BooleanInput, PasswordInput, RadioButtonGroupInput } from \"react-admin\";\n\nconst UserCreate = (props) => {\n  return (\n    <Create title=\"Create new User\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"first_name\" />\n        <TextInput source=\"last_name\" />\n        <TextInput source=\"username\" />\n        <TextInput source=\"email\" />\n        <TextInput source=\"userImg\" />\n        <PasswordInput source=\"password\" />\n        <RadioButtonGroupInput source=\"user_role\" choices={[\n            { id: 'Seeker', name: 'Seeker' },\n            { id: 'Mentor', name: 'Mentor' },\n        ]} />\n        <BooleanInput source=\"living_in_germany\" />\n        <BooleanInput source=\"admin\" />\n        <TextInput source=\"languages\" />\n        <TextInput source=\"nationality\" />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default UserCreate;\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput, BooleanInput, PasswordInput, RadioButtonGroupInput } from \"react-admin\";\n\nconst UserEdit = (props) => {\n  return (\n    <Edit title=\"Edit User\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"first_name\" />\n        <TextInput source=\"last_name\" />\n        <TextInput source=\"username\" />\n        <TextInput source=\"email\" />\n        <TextInput source=\"userImg\" />\n        <PasswordInput source=\"password\" />\n        <RadioButtonGroupInput source=\"user_role\" choices={[\n            { id: 'Seeker', name: 'Seeker' },\n            { id: 'Mentor', name: 'Mentor' },\n        ]} />\n        <BooleanInput source=\"living_in_germany\" />\n        <BooleanInput source=\"admin\" />\n        <TextInput source=\"languages\" />\n        <TextInput source=\"nationality\" />\n      </SimpleForm>\n\n    </Edit>\n  );\n};\n\nexport default UserEdit;\n","import React from 'react';\nimport { \n    List, \n    Datagrid,\n    TextField, \n    DateField, \n    EditButton,\n    DeleteButton,\n    BooleanField,\n    ImageField\n} from 'react-admin';\n\nconst ArticleList = (props) => {\n    return (\n        <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            {/* <TextField source=\"userComments\" /> */}\n            <TextField source=\"title\" />\n            <TextField source=\"subtitle\" />\n{/*             <TextField source=\"img1\" /> */}\n{/*             <TextField source=\"img2\" />\n            {/* <TextField source=\"img2\" />\n            <TextField source=\"img3\" /> */}\n{/*             <TextField source=\"body\" />\n            <TextField source=\"body2\" />\n            <TextField source=\"body3\" /> */}\n            <DateField source=\"date\" />\n            <TextField source=\"id\" />\n            <EditButton basePath='posts' />\n             <DeleteButton basePath='posts' />\n        </Datagrid>\n    </List>\n    )\n}\n\nexport default ArticleList;","import React from \"react\";\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  DateInput,\n  BooleanInput,\n  SelectArrayInput,\n  ImageInput,\n  // ImageField,\n} from \"react-admin\";\n\nconst ArticleCreate = (props) => {\n  return (\n    <Create title=\"Create Article\" {...props}>\n      <SimpleForm>\n        <TextInput source=\"title\" />\n        <TextInput source=\"subtitle\" />\n        <TextInput multiline source=\"body\" />\n        <TextInput multiline source=\"body2\" />\n        <TextInput multiline source=\"body3\" />\n        <TextInput source=\"img1\" />\n        <TextInput source=\"img2\" />\n        <TextInput source=\"img3\" />\n        {/* <ImageField source=\"img\" title=\"picture.title\" /> */}\n        <DateInput label=\"Published\" source=\"publishedAt\" />\n        <BooleanInput source=\"commentable\" />\n        <SelectArrayInput\n          label=\"Tags\"\n          source=\"categories\"\n          choices={[\n            { id: \"berlin\", name: \"Berlin\" },\n            { id: \"hamburg\", name: \"Hamburg\" },\n            { id: \"munich\", name: \"Munich\" },\n            { id: \"cologne\", name: \"Cologne\" },\n            { id: \"düsseldorf\", name: \"Düsseldorf\" },\n            { id: \"visa\", name: \"Visa\" },\n            { id: \"guide\", name: \"Guide\" },\n            { id: \"lifestyle\", name: \"Lifestyle\" },\n            { id: \"healthcare\", name: \"Healthcare\" },\n          ]}\n        />\n        <ImageInput\n          source=\"pictures\"\n          label=\"Related pictures\"\n          accept=\"image/*\"\n        ></ImageInput>\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default ArticleCreate;\n","import React from \"react\";\nimport {\n  Edit,\n  SimpleForm,\n  TextInput,\n  DateInput,\n  SelectArrayInput,\n  // ImageField,\n  ImageInput,\n  BooleanInput,\n} from \"react-admin\";\n\nconst ArticleEdit = (props) => {\n  return (\n    <Edit title=\"Edit Article\" {...props}>\n      <SimpleForm>\n        <TextInput disabled source=\"_id\" />\n        <TextInput source=\"title\" />\n        <TextInput source=\"subtitle\" />\n        <TextInput multiline source=\"body\" />\n        <TextInput multiline source=\"body2\" />\n        <TextInput multiline source=\"body3\" />\n        <TextInput source=\"img1\" />\n        <TextInput source=\"img2\" />\n        <TextInput source=\"img3\" />\n        {/* <ImageField source=\"img\" title=\"picture.title\" /> */}\n        <BooleanInput source=\"commentable\" />\n        <DateInput label=\"Published\" source=\"publishedAt\" />\n        <SelectArrayInput\n          label=\"Tags\"\n          source=\"categories\"\n          choices={[\n            { id: \"berlin\", name: \"Berlin\" },\n            { id: \"hamburg\", name: \"Hamburg\" },\n            { id: \"munich\", name: \"Munich\" },\n            { id: \"cologne\", name: \"Cologne\" },\n            { id: \"düsseldorf\", name: \"Düsseldorf\" },\n            { id: \"visa\", name: \"Visa\" },\n            { id: \"guide\", name: \"Guide\" },\n            { id: \"lifestyle\", name: \"Lifestyle\" },\n            { id: \"healthcare\", name: \"Healthcare\" },\n          ]}\n        />\n        <ImageInput\n          source=\"pictures\"\n          label=\"Related pictures\"\n          accept=\"image/*\"\n        ></ImageInput>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default ArticleEdit;\n","export default __webpack_public_path__ + \"static/media/Logo.e734cedd.png\";","import * as React from \"react\";\nimport { AppBar } from \"react-admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Logo from \"./Logo.png\";\n\nconst useStyles = makeStyles({\n  title: {\n    flex: 1,\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n  },\n  spacer: {\n    flex: 1,\n  },\n});\n\nconst MyAppBar = (props) => {\n  const classes = useStyles();\n  return (\n    <AppBar {...props}>\n      <Typography\n        variant=\"h7\"\n        color=\"inherit\"\n        className={classes.title}\n        id=\"react-admin-title\"\n      />\n      <a href=\"http://localhost:3000\">\n        <img src={Logo} alt=\"Komunikate\" width=\"370em\" />\n      </a>\n      <span className={classes.spacer} />\n    </AppBar>\n  );\n};\n\nexport default MyAppBar;\n","import * as React from 'react';\nimport { Layout } from 'react-admin';\nimport MyAppBar from './MyAppBar';\n\nconst MyLayout = (props) => <Layout {...props} appBar={MyAppBar} />;\n\nexport default MyLayout;","import \"../../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Admin, Resource, ListGuesser } from \"react-admin\";\n// import simpleRestProvider from \"ra-data-simple-rest\";\nimport jsonServerProvider from 'ra-data-json-server';\nimport fakeDataProvider from \"ra-data-fakerest\";\nimport UserList from \"./UserList\";\nimport UserCreate from \"./UserCreate\";\nimport UserEdit from \"./UserEdit\";\nimport PostList from \"./ArticleList\";\nimport PostCreate from \"./ArticleCreate\";\nimport PostEdit from \"./ArticleEdit\";\nimport CommentList from \"./CommentList\";\nimport CommentCreate from \"./CommentCreate\";\nimport CommentEdit from \"./CommentEdit\";\nimport axios from 'axios';\nimport myDataProvider from './Provid'\nimport {fetchJson as httpClient} from './httpClient'\nimport MyLayout from \"./MyLayout\";\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\n\n/* const dataProvider = myDataProvider('https://localhost:3002', httpClient); */\nconst dataProvider = myDataProvider('https://stark-fjord-75040.herokuapp.com', httpClient);\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark', // Switching the dark mode on is a single property value change.\n  },\n});\n\n\nfunction AdminPanel() {\n\n  return (\n    <Admin theme={theme} layout={MyLayout} dataProvider={dataProvider}>\n      <Resource\n        name=\"users\"\n        list={UserList}\n        create={UserCreate}\n        edit={UserEdit}\n      />\n      <Resource\n        name=\"posts\"\n        list={PostList}\n        create={PostCreate}\n        edit={PostEdit}\n      />\n{/*       <Resource\n        name=\"comments\"\n        list={CommentList}\n        create={CommentCreate}\n        edit={CommentEdit}\n      /> */}\n    </Admin>\n  );\n};\n\nexport default AdminPanel;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport HeaderBody from \"./components/HeaderSection/HeaderBody\";\n// import FooterBar from \"./components/Foot/Foot\";\nimport FooterNew from \"./components/FooterNew/FooterNew\";\nimport Guide from \"./components/Routes/Guide\";\nimport Visas from \"./components/Routes/Visas.js\";\nimport HealthInsurance from \"./components/Routes/HealthInsurance\";\nimport Applications from \"./components/Routes/Applications\";\nimport Articles from \"./components/Articles/Articles\";\nimport UserCard from \"./components/Card/UserCard\";\nimport UserLoggedIn from \"./components/LoggedInLandingPage/UserLoggedin\";\nimport UserLogin from \"./components/LoginPage/UserLogin\";\nimport UserSignup from \"./components/LoginPage/UserSignup\";\nimport UserProfile from \"./components/UserProfilePage/UserProfile\";\nimport UserSettings from \"./components/UserSettings/UserSettings\";\nimport Messenger from \"./components/Messenger/Messenger\";\nimport SingleArticle from \"./components/ArticlePage/ArticleTemp\";\nimport LandingBanner from \"./components/LandingBanner/LandingBanner\";\n//import Messenger from \"./components/Messenger/Sliders\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n  Redirect,\n} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport AdminPanel from \"./components/AdminPanel/AdminPanel\";\n\nconst App = () => {\n  const [userToken, setUserToken] = useState({});\n  const [jwt, setJwt] = useState(\"\");\n  const [user, setUser] = useState();\n  console.log(\"this is the userId\", user);\n\n  let location = useLocation();\n\n  useEffect(() => {\n    let token = localStorage.token;\n    if (token) {\n      const decoded = jwt_decode(token);\n      setUserToken({\n        first_name: decoded.user.first_name,\n        last_name: decoded.user.last_name,\n        username: decoded.user.username,\n        email: decoded.user.email,\n        user_role: decoded.user.user_role,\n        id: decoded.user._id,\n        admin: decoded.user.admin,\n        userImg: decoded.user.userImg,\n      });\n    }\n  }, [jwt]);\n\n  console.log(userToken);\n\n  return (\n    <Router>\n      <div className=\"App footer-bottom\">\n        {location.pathname.toLowerCase() !== \"/adminpanel\" && (\n          <NavBar userToken={userToken} setJwt={setJwt} />\n        )}\n\n        <Switch>\n          <Route path=\"/adminpanel\" token={userToken} component={AdminPanel} />\n          <Route exact path=\"/messages\">\n            <Messenger userToken={userToken} user={user} setUser={setUser} />\n          </Route>\n          <Route exact path=\"/\" token={userToken}>\n            {userToken.user_role === \"\" ? (\n              <HeaderBody />\n            ) : (\n              <UserLoggedIn setUser={setUser} />\n            )}\n          </Route>\n          {/* User Registration and Login Routes */}\n          <Route path=\"/register\" component={UserSignup} />\n          <Route path=\"/user_login\">\n            <UserLogin setJwt={setJwt} />\n          </Route>\n          {/* User Related Routes */}\n          <Route path=\"/user_settings\">\n            <UserSettings token={userToken} />\n          </Route>\n          <Route path=\"/user_profile/:id?\">\n            <UserProfile token={userToken} />\n          </Route>\n\n          <Route path=\"/users/:id\" token={userToken} component={UserCard}>\n            <UserCard token={userToken} setUser={setUser} />\n          </Route>\n\n          {/* Routes for major Topics */}\n          {/*           <Route path=\"/guide\" component={Guide} />\n          <Route path=\"/visas\" component={Visas} />\n          <Route path=\"/healthinsurance\" component={HealthInsurance} />\n          <Route path=\"/applications\" component={Applications} /> */}\n\n          <Route path=\"/articles/article/:id\" component={SingleArticle} />\n\n          <Route path=\"/articles/:topic?\" component={Articles} />\n          {/* Add all Routes above, Below is redirect for non existent paths */}\n          <Route path=\"/*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n\n        {/* Needs Restyling */}\n        {/* <FooterBar /> */}\n        <div className=\"footer-snap\">\n          <FooterNew />\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}